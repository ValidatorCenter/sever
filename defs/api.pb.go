// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package defs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NilReq struct {
	Nil                  bool     `protobuf:"varint,1,opt,name=Nil,proto3" json:"Nil,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NilReq) Reset()         { *m = NilReq{} }
func (m *NilReq) String() string { return proto.CompactTextString(m) }
func (*NilReq) ProtoMessage()    {}
func (*NilReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *NilReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NilReq.Unmarshal(m, b)
}
func (m *NilReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NilReq.Marshal(b, m, deterministic)
}
func (m *NilReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NilReq.Merge(m, src)
}
func (m *NilReq) XXX_Size() int {
	return xxx_messageInfo_NilReq.Size(m)
}
func (m *NilReq) XXX_DiscardUnknown() {
	xxx_messageInfo_NilReq.DiscardUnknown(m)
}

var xxx_messageInfo_NilReq proto.InternalMessageInfo

func (m *NilReq) GetNil() bool {
	if m != nil {
		return m.Nil
	}
	return false
}

//+---- Account
type SessionID struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionID) Reset()         { *m = SessionID{} }
func (m *SessionID) String() string { return proto.CompactTextString(m) }
func (*SessionID) ProtoMessage()    {}
func (*SessionID) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *SessionID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionID.Unmarshal(m, b)
}
func (m *SessionID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionID.Marshal(b, m, deterministic)
}
func (m *SessionID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionID.Merge(m, src)
}
func (m *SessionID) XXX_Size() int {
	return xxx_messageInfo_SessionID.Size(m)
}
func (m *SessionID) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionID.DiscardUnknown(m)
}

var xxx_messageInfo_SessionID proto.InternalMessageInfo

func (m *SessionID) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type SeedPhrase struct {
	Mnemonic             string   `protobuf:"bytes,1,opt,name=Mnemonic,proto3" json:"Mnemonic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeedPhrase) Reset()         { *m = SeedPhrase{} }
func (m *SeedPhrase) String() string { return proto.CompactTextString(m) }
func (*SeedPhrase) ProtoMessage()    {}
func (*SeedPhrase) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *SeedPhrase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeedPhrase.Unmarshal(m, b)
}
func (m *SeedPhrase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeedPhrase.Marshal(b, m, deterministic)
}
func (m *SeedPhrase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeedPhrase.Merge(m, src)
}
func (m *SeedPhrase) XXX_Size() int {
	return xxx_messageInfo_SeedPhrase.Size(m)
}
func (m *SeedPhrase) XXX_DiscardUnknown() {
	xxx_messageInfo_SeedPhrase.DiscardUnknown(m)
}

var xxx_messageInfo_SeedPhrase proto.InternalMessageInfo

func (m *SeedPhrase) GetMnemonic() string {
	if m != nil {
		return m.Mnemonic
	}
	return ""
}

//+---- ATasks-OUT
type AtasksOutReq struct {
	TokenAuth            string   `protobuf:"bytes,1,opt,name=TokenAuth,proto3" json:"TokenAuth,omitempty"`
	PubKey               string   `protobuf:"bytes,2,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AtasksOutReq) Reset()         { *m = AtasksOutReq{} }
func (m *AtasksOutReq) String() string { return proto.CompactTextString(m) }
func (*AtasksOutReq) ProtoMessage()    {}
func (*AtasksOutReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *AtasksOutReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AtasksOutReq.Unmarshal(m, b)
}
func (m *AtasksOutReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AtasksOutReq.Marshal(b, m, deterministic)
}
func (m *AtasksOutReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AtasksOutReq.Merge(m, src)
}
func (m *AtasksOutReq) XXX_Size() int {
	return xxx_messageInfo_AtasksOutReq.Size(m)
}
func (m *AtasksOutReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AtasksOutReq.DiscardUnknown(m)
}

var xxx_messageInfo_AtasksOutReq proto.InternalMessageInfo

func (m *AtasksOutReq) GetTokenAuth() string {
	if m != nil {
		return m.TokenAuth
	}
	return ""
}

func (m *AtasksOutReq) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

type ReturnAPITask struct {
	WalletCash           float32    `protobuf:"fixed32,1,opt,name=WalletCash,proto3" json:"WalletCash,omitempty"`
	List                 []*TaskOne `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReturnAPITask) Reset()         { *m = ReturnAPITask{} }
func (m *ReturnAPITask) String() string { return proto.CompactTextString(m) }
func (*ReturnAPITask) ProtoMessage()    {}
func (*ReturnAPITask) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *ReturnAPITask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnAPITask.Unmarshal(m, b)
}
func (m *ReturnAPITask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnAPITask.Marshal(b, m, deterministic)
}
func (m *ReturnAPITask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnAPITask.Merge(m, src)
}
func (m *ReturnAPITask) XXX_Size() int {
	return xxx_messageInfo_ReturnAPITask.Size(m)
}
func (m *ReturnAPITask) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnAPITask.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnAPITask proto.InternalMessageInfo

func (m *ReturnAPITask) GetWalletCash() float32 {
	if m != nil {
		return m.WalletCash
	}
	return 0
}

func (m *ReturnAPITask) GetList() []*TaskOne {
	if m != nil {
		return m.List
	}
	return nil
}

// Задачи для исполнения ноде
type TaskOne struct {
	Done                 bool                 `protobuf:"varint,1,opt,name=Done,proto3" json:"Done,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Created,proto3" json:"Created,omitempty"`
	Type                 string               `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Height               uint32               `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	PubKey               string               `protobuf:"bytes,5,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	Address              string               `protobuf:"bytes,6,opt,name=Address,proto3" json:"Address,omitempty"`
	Amount               float32              `protobuf:"fixed32,7,opt,name=Amount,proto3" json:"Amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TaskOne) Reset()         { *m = TaskOne{} }
func (m *TaskOne) String() string { return proto.CompactTextString(m) }
func (*TaskOne) ProtoMessage()    {}
func (*TaskOne) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *TaskOne) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskOne.Unmarshal(m, b)
}
func (m *TaskOne) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskOne.Marshal(b, m, deterministic)
}
func (m *TaskOne) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskOne.Merge(m, src)
}
func (m *TaskOne) XXX_Size() int {
	return xxx_messageInfo_TaskOne.Size(m)
}
func (m *TaskOne) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskOne.DiscardUnknown(m)
}

var xxx_messageInfo_TaskOne proto.InternalMessageInfo

func (m *TaskOne) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *TaskOne) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *TaskOne) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TaskOne) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TaskOne) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *TaskOne) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TaskOne) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

//+---- ATasks-IN
// Результат принятия ответа сервера от atasks, по задачам валидатора
type ResQ struct {
	Status               int32    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResQ) Reset()         { *m = ResQ{} }
func (m *ResQ) String() string { return proto.CompactTextString(m) }
func (*ResQ) ProtoMessage()    {}
func (*ResQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *ResQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResQ.Unmarshal(m, b)
}
func (m *ResQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResQ.Marshal(b, m, deterministic)
}
func (m *ResQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResQ.Merge(m, src)
}
func (m *ResQ) XXX_Size() int {
	return xxx_messageInfo_ResQ.Size(m)
}
func (m *ResQ) XXX_DiscardUnknown() {
	xxx_messageInfo_ResQ.DiscardUnknown(m)
}

var xxx_messageInfo_ResQ proto.InternalMessageInfo

func (m *ResQ) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ResQ) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Результат выполнения задач валидатора
type NodeTodoQ struct {
	TxHash               string      `protobuf:"bytes,1,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	QList                []*TodoOneQ `protobuf:"bytes,2,rep,name=QList,proto3" json:"QList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NodeTodoQ) Reset()         { *m = NodeTodoQ{} }
func (m *NodeTodoQ) String() string { return proto.CompactTextString(m) }
func (*NodeTodoQ) ProtoMessage()    {}
func (*NodeTodoQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *NodeTodoQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeTodoQ.Unmarshal(m, b)
}
func (m *NodeTodoQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeTodoQ.Marshal(b, m, deterministic)
}
func (m *NodeTodoQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeTodoQ.Merge(m, src)
}
func (m *NodeTodoQ) XXX_Size() int {
	return xxx_messageInfo_NodeTodoQ.Size(m)
}
func (m *NodeTodoQ) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeTodoQ.DiscardUnknown(m)
}

var xxx_messageInfo_NodeTodoQ proto.InternalMessageInfo

func (m *NodeTodoQ) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *NodeTodoQ) GetQList() []*TodoOneQ {
	if m != nil {
		return m.QList
	}
	return nil
}

// Идентификатор одной задачи
type TodoOneQ struct {
	Type                 string               `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Height               uint32               `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
	PubKey               string               `protobuf:"bytes,3,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	Address              string               `protobuf:"bytes,4,opt,name=Address,proto3" json:"Address,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=Created,proto3" json:"Created,omitempty"`
	Amount               float32              `protobuf:"fixed32,6,opt,name=Amount,proto3" json:"Amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TodoOneQ) Reset()         { *m = TodoOneQ{} }
func (m *TodoOneQ) String() string { return proto.CompactTextString(m) }
func (*TodoOneQ) ProtoMessage()    {}
func (*TodoOneQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *TodoOneQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoOneQ.Unmarshal(m, b)
}
func (m *TodoOneQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoOneQ.Marshal(b, m, deterministic)
}
func (m *TodoOneQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoOneQ.Merge(m, src)
}
func (m *TodoOneQ) XXX_Size() int {
	return xxx_messageInfo_TodoOneQ.Size(m)
}
func (m *TodoOneQ) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoOneQ.DiscardUnknown(m)
}

var xxx_messageInfo_TodoOneQ proto.InternalMessageInfo

func (m *TodoOneQ) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TodoOneQ) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TodoOneQ) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *TodoOneQ) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TodoOneQ) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *TodoOneQ) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

//+---- Block-1
type BlockInfoReq struct {
	Number               uint32   `protobuf:"varint,1,opt,name=Number,proto3" json:"Number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockInfoReq) Reset()         { *m = BlockInfoReq{} }
func (m *BlockInfoReq) String() string { return proto.CompactTextString(m) }
func (*BlockInfoReq) ProtoMessage()    {}
func (*BlockInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *BlockInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockInfoReq.Unmarshal(m, b)
}
func (m *BlockInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockInfoReq.Marshal(b, m, deterministic)
}
func (m *BlockInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockInfoReq.Merge(m, src)
}
func (m *BlockInfoReq) XXX_Size() int {
	return xxx_messageInfo_BlockInfoReq.Size(m)
}
func (m *BlockInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_BlockInfoReq proto.InternalMessageInfo

func (m *BlockInfoReq) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

// Структура возврата блока в виде JSON
type RetJSONBlock struct {
	Status               bool     `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Block                *Block1  `protobuf:"bytes,2,opt,name=Block,proto3" json:"Block,omitempty"`
	ErrMsg               string   `protobuf:"bytes,3,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetJSONBlock) Reset()         { *m = RetJSONBlock{} }
func (m *RetJSONBlock) String() string { return proto.CompactTextString(m) }
func (*RetJSONBlock) ProtoMessage()    {}
func (*RetJSONBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *RetJSONBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetJSONBlock.Unmarshal(m, b)
}
func (m *RetJSONBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetJSONBlock.Marshal(b, m, deterministic)
}
func (m *RetJSONBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetJSONBlock.Merge(m, src)
}
func (m *RetJSONBlock) XXX_Size() int {
	return xxx_messageInfo_RetJSONBlock.Size(m)
}
func (m *RetJSONBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_RetJSONBlock.DiscardUnknown(m)
}

var xxx_messageInfo_RetJSONBlock proto.InternalMessageInfo

func (m *RetJSONBlock) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *RetJSONBlock) GetBlock() *Block1 {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *RetJSONBlock) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

// Структура одного блока для вывода на страницу
type Block1 struct {
	Hash                 string               `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	HashMin              string               `protobuf:"bytes,2,opt,name=HashMin,proto3" json:"HashMin,omitempty"`
	Height               int32                `protobuf:"varint,3,opt,name=Height,proto3" json:"Height,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Time,proto3" json:"Time,omitempty"`
	Age                  string               `protobuf:"bytes,5,opt,name=Age,proto3" json:"Age,omitempty"`
	NumTxs               int32                `protobuf:"varint,6,opt,name=NumTxs,proto3" json:"NumTxs,omitempty"`
	TotalTxs             int32                `protobuf:"varint,7,opt,name=TotalTxs,proto3" json:"TotalTxs,omitempty"`
	Transactions         []*Block1Transaction `protobuf:"bytes,8,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
	Events               []*Block1Events      `protobuf:"bytes,9,rep,name=Events,proto3" json:"Events,omitempty"`
	Validators           []*Block1Validator   `protobuf:"bytes,10,rep,name=Validators,proto3" json:"Validators,omitempty"`
	Proposer             string               `protobuf:"bytes,11,opt,name=Proposer,proto3" json:"Proposer,omitempty"`
	ProposerName         string               `protobuf:"bytes,12,opt,name=ProposerName,proto3" json:"ProposerName,omitempty"`
	ProposerLogo         string               `protobuf:"bytes,13,opt,name=ProposerLogo,proto3" json:"ProposerLogo,omitempty"`
	BlockReward          float32              `protobuf:"fixed32,14,opt,name=BlockReward,proto3" json:"BlockReward,omitempty"`
	Size                 int32                `protobuf:"varint,15,opt,name=Size,proto3" json:"Size,omitempty"`
	TransactionsAmnt     int32                `protobuf:"varint,16,opt,name=TransactionsAmnt,proto3" json:"TransactionsAmnt,omitempty"`
	EventsAmnt           int32                `protobuf:"varint,17,opt,name=EventsAmnt,proto3" json:"EventsAmnt,omitempty"`
	PrecommitsAmnt       int32                `protobuf:"varint,18,opt,name=PrecommitsAmnt,proto3" json:"PrecommitsAmnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Block1) Reset()         { *m = Block1{} }
func (m *Block1) String() string { return proto.CompactTextString(m) }
func (*Block1) ProtoMessage()    {}
func (*Block1) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *Block1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block1.Unmarshal(m, b)
}
func (m *Block1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block1.Marshal(b, m, deterministic)
}
func (m *Block1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block1.Merge(m, src)
}
func (m *Block1) XXX_Size() int {
	return xxx_messageInfo_Block1.Size(m)
}
func (m *Block1) XXX_DiscardUnknown() {
	xxx_messageInfo_Block1.DiscardUnknown(m)
}

var xxx_messageInfo_Block1 proto.InternalMessageInfo

func (m *Block1) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block1) GetHashMin() string {
	if m != nil {
		return m.HashMin
	}
	return ""
}

func (m *Block1) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Block1) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Block1) GetAge() string {
	if m != nil {
		return m.Age
	}
	return ""
}

func (m *Block1) GetNumTxs() int32 {
	if m != nil {
		return m.NumTxs
	}
	return 0
}

func (m *Block1) GetTotalTxs() int32 {
	if m != nil {
		return m.TotalTxs
	}
	return 0
}

func (m *Block1) GetTransactions() []*Block1Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Block1) GetEvents() []*Block1Events {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Block1) GetValidators() []*Block1Validator {
	if m != nil {
		return m.Validators
	}
	return nil
}

func (m *Block1) GetProposer() string {
	if m != nil {
		return m.Proposer
	}
	return ""
}

func (m *Block1) GetProposerName() string {
	if m != nil {
		return m.ProposerName
	}
	return ""
}

func (m *Block1) GetProposerLogo() string {
	if m != nil {
		return m.ProposerLogo
	}
	return ""
}

func (m *Block1) GetBlockReward() float32 {
	if m != nil {
		return m.BlockReward
	}
	return 0
}

func (m *Block1) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Block1) GetTransactionsAmnt() int32 {
	if m != nil {
		return m.TransactionsAmnt
	}
	return 0
}

func (m *Block1) GetEventsAmnt() int32 {
	if m != nil {
		return m.EventsAmnt
	}
	return 0
}

func (m *Block1) GetPrecommitsAmnt() int32 {
	if m != nil {
		return m.PrecommitsAmnt
	}
	return 0
}

// Структура одной транзакции в блоке для вывода на страницу
type Block1Transaction struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	HashMin              string   `protobuf:"bytes,2,opt,name=HashMin,proto3" json:"HashMin,omitempty"`
	From                 string   `protobuf:"bytes,3,opt,name=From,proto3" json:"From,omitempty"`
	FromMin              string   `protobuf:"bytes,4,opt,name=FromMin,proto3" json:"FromMin,omitempty"`
	Nonce                int32    `protobuf:"varint,5,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	GasPrice             int32    `protobuf:"varint,6,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	Type                 int32    `protobuf:"varint,7,opt,name=Type,proto3" json:"Type,omitempty"`
	TypeTxt              string   `protobuf:"bytes,8,opt,name=TypeTxt,proto3" json:"TypeTxt,omitempty"`
	Amount               float32  `protobuf:"fixed32,9,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Payload              string   `protobuf:"bytes,10,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Gas                  int32    `protobuf:"varint,11,opt,name=Gas,proto3" json:"Gas,omitempty"`
	GasCoin              string   `protobuf:"bytes,12,opt,name=GasCoin,proto3" json:"GasCoin,omitempty"`
	GasUsed              int32    `protobuf:"varint,13,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block1Transaction) Reset()         { *m = Block1Transaction{} }
func (m *Block1Transaction) String() string { return proto.CompactTextString(m) }
func (*Block1Transaction) ProtoMessage()    {}
func (*Block1Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *Block1Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block1Transaction.Unmarshal(m, b)
}
func (m *Block1Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block1Transaction.Marshal(b, m, deterministic)
}
func (m *Block1Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block1Transaction.Merge(m, src)
}
func (m *Block1Transaction) XXX_Size() int {
	return xxx_messageInfo_Block1Transaction.Size(m)
}
func (m *Block1Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Block1Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Block1Transaction proto.InternalMessageInfo

func (m *Block1Transaction) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block1Transaction) GetHashMin() string {
	if m != nil {
		return m.HashMin
	}
	return ""
}

func (m *Block1Transaction) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Block1Transaction) GetFromMin() string {
	if m != nil {
		return m.FromMin
	}
	return ""
}

func (m *Block1Transaction) GetNonce() int32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Block1Transaction) GetGasPrice() int32 {
	if m != nil {
		return m.GasPrice
	}
	return 0
}

func (m *Block1Transaction) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Block1Transaction) GetTypeTxt() string {
	if m != nil {
		return m.TypeTxt
	}
	return ""
}

func (m *Block1Transaction) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Block1Transaction) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *Block1Transaction) GetGas() int32 {
	if m != nil {
		return m.Gas
	}
	return 0
}

func (m *Block1Transaction) GetGasCoin() string {
	if m != nil {
		return m.GasCoin
	}
	return ""
}

func (m *Block1Transaction) GetGasUsed() int32 {
	if m != nil {
		return m.GasUsed
	}
	return 0
}

// Структура одного события в блоке для вывода на страницу
type Block1Events struct {
	Type                 string   `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	TypeTxt              string   `protobuf:"bytes,2,opt,name=TypeTxt,proto3" json:"TypeTxt,omitempty"`
	Role                 string   `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=Address,proto3" json:"Address,omitempty"`
	AddressMin           string   `protobuf:"bytes,5,opt,name=AddressMin,proto3" json:"AddressMin,omitempty"`
	Amount               float32  `protobuf:"fixed32,6,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Coin                 string   `protobuf:"bytes,7,opt,name=Coin,proto3" json:"Coin,omitempty"`
	ValidatorPubKey      string   `protobuf:"bytes,8,opt,name=ValidatorPubKey,proto3" json:"ValidatorPubKey,omitempty"`
	ValidatorPubKeyMin   string   `protobuf:"bytes,9,opt,name=ValidatorPubKeyMin,proto3" json:"ValidatorPubKeyMin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block1Events) Reset()         { *m = Block1Events{} }
func (m *Block1Events) String() string { return proto.CompactTextString(m) }
func (*Block1Events) ProtoMessage()    {}
func (*Block1Events) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *Block1Events) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block1Events.Unmarshal(m, b)
}
func (m *Block1Events) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block1Events.Marshal(b, m, deterministic)
}
func (m *Block1Events) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block1Events.Merge(m, src)
}
func (m *Block1Events) XXX_Size() int {
	return xxx_messageInfo_Block1Events.Size(m)
}
func (m *Block1Events) XXX_DiscardUnknown() {
	xxx_messageInfo_Block1Events.DiscardUnknown(m)
}

var xxx_messageInfo_Block1Events proto.InternalMessageInfo

func (m *Block1Events) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Block1Events) GetTypeTxt() string {
	if m != nil {
		return m.TypeTxt
	}
	return ""
}

func (m *Block1Events) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Block1Events) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Block1Events) GetAddressMin() string {
	if m != nil {
		return m.AddressMin
	}
	return ""
}

func (m *Block1Events) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Block1Events) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

func (m *Block1Events) GetValidatorPubKey() string {
	if m != nil {
		return m.ValidatorPubKey
	}
	return ""
}

func (m *Block1Events) GetValidatorPubKeyMin() string {
	if m != nil {
		return m.ValidatorPubKeyMin
	}
	return ""
}

// Структура одного валидатор в блоке для вывода на страницу
type Block1Validator struct {
	PubKey               string   `protobuf:"bytes,1,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	Signed               bool     `protobuf:"varint,2,opt,name=Signed,proto3" json:"Signed,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Logo                 string   `protobuf:"bytes,4,opt,name=Logo,proto3" json:"Logo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block1Validator) Reset()         { *m = Block1Validator{} }
func (m *Block1Validator) String() string { return proto.CompactTextString(m) }
func (*Block1Validator) ProtoMessage()    {}
func (*Block1Validator) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *Block1Validator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block1Validator.Unmarshal(m, b)
}
func (m *Block1Validator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block1Validator.Marshal(b, m, deterministic)
}
func (m *Block1Validator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block1Validator.Merge(m, src)
}
func (m *Block1Validator) XXX_Size() int {
	return xxx_messageInfo_Block1Validator.Size(m)
}
func (m *Block1Validator) XXX_DiscardUnknown() {
	xxx_messageInfo_Block1Validator.DiscardUnknown(m)
}

var xxx_messageInfo_Block1Validator proto.InternalMessageInfo

func (m *Block1Validator) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *Block1Validator) GetSigned() bool {
	if m != nil {
		return m.Signed
	}
	return false
}

func (m *Block1Validator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Block1Validator) GetLogo() string {
	if m != nil {
		return m.Logo
	}
	return ""
}

//+---- Trx-1
type TrxInfoReq struct {
	Number               string   `protobuf:"bytes,1,opt,name=Number,proto3" json:"Number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrxInfoReq) Reset()         { *m = TrxInfoReq{} }
func (m *TrxInfoReq) String() string { return proto.CompactTextString(m) }
func (*TrxInfoReq) ProtoMessage()    {}
func (*TrxInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *TrxInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrxInfoReq.Unmarshal(m, b)
}
func (m *TrxInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrxInfoReq.Marshal(b, m, deterministic)
}
func (m *TrxInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrxInfoReq.Merge(m, src)
}
func (m *TrxInfoReq) XXX_Size() int {
	return xxx_messageInfo_TrxInfoReq.Size(m)
}
func (m *TrxInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TrxInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_TrxInfoReq proto.InternalMessageInfo

func (m *TrxInfoReq) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

// Структура возврата транзакции в виде JSON
type RetJSONTrx struct {
	Status               bool     `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Trx                  *Trans1  `protobuf:"bytes,2,opt,name=Trx,proto3" json:"Trx,omitempty"`
	ErrMsg               string   `protobuf:"bytes,3,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetJSONTrx) Reset()         { *m = RetJSONTrx{} }
func (m *RetJSONTrx) String() string { return proto.CompactTextString(m) }
func (*RetJSONTrx) ProtoMessage()    {}
func (*RetJSONTrx) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *RetJSONTrx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetJSONTrx.Unmarshal(m, b)
}
func (m *RetJSONTrx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetJSONTrx.Marshal(b, m, deterministic)
}
func (m *RetJSONTrx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetJSONTrx.Merge(m, src)
}
func (m *RetJSONTrx) XXX_Size() int {
	return xxx_messageInfo_RetJSONTrx.Size(m)
}
func (m *RetJSONTrx) XXX_DiscardUnknown() {
	xxx_messageInfo_RetJSONTrx.DiscardUnknown(m)
}

var xxx_messageInfo_RetJSONTrx proto.InternalMessageInfo

func (m *RetJSONTrx) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *RetJSONTrx) GetTrx() *Trans1 {
	if m != nil {
		return m.Trx
	}
	return nil
}

func (m *RetJSONTrx) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type Trans1 struct {
	Status               string   `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
	HashMin              string   `protobuf:"bytes,3,opt,name=HashMin,proto3" json:"HashMin,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	Index                int32    `protobuf:"varint,5,opt,name=Index,proto3" json:"Index,omitempty"`
	From                 string   `protobuf:"bytes,6,opt,name=From,proto3" json:"From,omitempty"`
	FromMin              string   `protobuf:"bytes,7,opt,name=FromMin,proto3" json:"FromMin,omitempty"`
	Nonce                int32    `protobuf:"varint,8,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	GasPrice             int32    `protobuf:"varint,9,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	GasCoin              string   `protobuf:"bytes,10,opt,name=GasCoin,proto3" json:"GasCoin,omitempty"`
	GasUsed              int32    `protobuf:"varint,11,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	GasFee               float32  `protobuf:"fixed32,12,opt,name=GasFee,proto3" json:"GasFee,omitempty"`
	Type                 int32    `protobuf:"varint,13,opt,name=Type,proto3" json:"Type,omitempty"`
	TypeTxt              string   `protobuf:"bytes,14,opt,name=TypeTxt,proto3" json:"TypeTxt,omitempty"`
	Payload              string   `protobuf:"bytes,15,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Code                 int32    `protobuf:"varint,16,opt,name=Code,proto3" json:"Code,omitempty"`
	Log                  string   `protobuf:"bytes,17,opt,name=Log,proto3" json:"Log,omitempty"`
	Amount               float32  `protobuf:"fixed32,18,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TxCoinToBuy          string   `protobuf:"bytes,19,opt,name=TxCoinToBuy,proto3" json:"TxCoinToBuy,omitempty"`
	TxCoinToSell         string   `protobuf:"bytes,20,opt,name=TxCoinToSell,proto3" json:"TxCoinToSell,omitempty"`
	TxFrom               string   `protobuf:"bytes,21,opt,name=TxFrom,proto3" json:"TxFrom,omitempty"`
	TxReturn             float32  `protobuf:"fixed32,22,opt,name=TxReturn,proto3" json:"TxReturn,omitempty"`
	TxSellAmount         float32  `protobuf:"fixed32,23,opt,name=TxSellAmount,proto3" json:"TxSellAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trans1) Reset()         { *m = Trans1{} }
func (m *Trans1) String() string { return proto.CompactTextString(m) }
func (*Trans1) ProtoMessage()    {}
func (*Trans1) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *Trans1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trans1.Unmarshal(m, b)
}
func (m *Trans1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trans1.Marshal(b, m, deterministic)
}
func (m *Trans1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trans1.Merge(m, src)
}
func (m *Trans1) XXX_Size() int {
	return xxx_messageInfo_Trans1.Size(m)
}
func (m *Trans1) XXX_DiscardUnknown() {
	xxx_messageInfo_Trans1.DiscardUnknown(m)
}

var xxx_messageInfo_Trans1 proto.InternalMessageInfo

func (m *Trans1) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Trans1) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Trans1) GetHashMin() string {
	if m != nil {
		return m.HashMin
	}
	return ""
}

func (m *Trans1) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Trans1) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Trans1) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Trans1) GetFromMin() string {
	if m != nil {
		return m.FromMin
	}
	return ""
}

func (m *Trans1) GetNonce() int32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Trans1) GetGasPrice() int32 {
	if m != nil {
		return m.GasPrice
	}
	return 0
}

func (m *Trans1) GetGasCoin() string {
	if m != nil {
		return m.GasCoin
	}
	return ""
}

func (m *Trans1) GetGasUsed() int32 {
	if m != nil {
		return m.GasUsed
	}
	return 0
}

func (m *Trans1) GetGasFee() float32 {
	if m != nil {
		return m.GasFee
	}
	return 0
}

func (m *Trans1) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Trans1) GetTypeTxt() string {
	if m != nil {
		return m.TypeTxt
	}
	return ""
}

func (m *Trans1) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *Trans1) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Trans1) GetLog() string {
	if m != nil {
		return m.Log
	}
	return ""
}

func (m *Trans1) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Trans1) GetTxCoinToBuy() string {
	if m != nil {
		return m.TxCoinToBuy
	}
	return ""
}

func (m *Trans1) GetTxCoinToSell() string {
	if m != nil {
		return m.TxCoinToSell
	}
	return ""
}

func (m *Trans1) GetTxFrom() string {
	if m != nil {
		return m.TxFrom
	}
	return ""
}

func (m *Trans1) GetTxReturn() float32 {
	if m != nil {
		return m.TxReturn
	}
	return 0
}

func (m *Trans1) GetTxSellAmount() float32 {
	if m != nil {
		return m.TxSellAmount
	}
	return 0
}

//+---- Node-1
type NodeInfoReq struct {
	Number               string   `protobuf:"bytes,1,opt,name=Number,proto3" json:"Number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfoReq) Reset()         { *m = NodeInfoReq{} }
func (m *NodeInfoReq) String() string { return proto.CompactTextString(m) }
func (*NodeInfoReq) ProtoMessage()    {}
func (*NodeInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *NodeInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfoReq.Unmarshal(m, b)
}
func (m *NodeInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfoReq.Marshal(b, m, deterministic)
}
func (m *NodeInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfoReq.Merge(m, src)
}
func (m *NodeInfoReq) XXX_Size() int {
	return xxx_messageInfo_NodeInfoReq.Size(m)
}
func (m *NodeInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfoReq proto.InternalMessageInfo

func (m *NodeInfoReq) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

// Структура возврата блока в виде JSON
type RetJSONNode struct {
	Status               bool         `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Node                 *NodeExt2    `protobuf:"bytes,2,opt,name=Node,proto3" json:"Node,omitempty"`
	Rewards              []*ResReward `protobuf:"bytes,3,rep,name=Rewards,proto3" json:"Rewards,omitempty"`
	ErrMsg               string       `protobuf:"bytes,4,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RetJSONNode) Reset()         { *m = RetJSONNode{} }
func (m *RetJSONNode) String() string { return proto.CompactTextString(m) }
func (*RetJSONNode) ProtoMessage()    {}
func (*RetJSONNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *RetJSONNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetJSONNode.Unmarshal(m, b)
}
func (m *RetJSONNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetJSONNode.Marshal(b, m, deterministic)
}
func (m *RetJSONNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetJSONNode.Merge(m, src)
}
func (m *RetJSONNode) XXX_Size() int {
	return xxx_messageInfo_RetJSONNode.Size(m)
}
func (m *RetJSONNode) XXX_DiscardUnknown() {
	xxx_messageInfo_RetJSONNode.DiscardUnknown(m)
}

var xxx_messageInfo_RetJSONNode proto.InternalMessageInfo

func (m *RetJSONNode) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *RetJSONNode) GetNode() *NodeExt2 {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *RetJSONNode) GetRewards() []*ResReward {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *RetJSONNode) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type NodeExt2 struct {
	ValidatorName        string               `protobuf:"bytes,1,opt,name=ValidatorName,proto3" json:"ValidatorName,omitempty"`
	ValidatorURL         string               `protobuf:"bytes,2,opt,name=ValidatorURL,proto3" json:"ValidatorURL,omitempty"`
	ValidatorLogoImg     string               `protobuf:"bytes,3,opt,name=ValidatorLogoImg,proto3" json:"ValidatorLogoImg,omitempty"`
	ValidatorDesc        string               `protobuf:"bytes,4,opt,name=ValidatorDesc,proto3" json:"ValidatorDesc,omitempty"`
	Uptime               float32              `protobuf:"fixed32,5,opt,name=Uptime,proto3" json:"Uptime,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,6,opt,name=Created,proto3" json:"Created,omitempty"`
	RewardAddress        string               `protobuf:"bytes,7,opt,name=RewardAddress,proto3" json:"RewardAddress,omitempty"`
	OwnerAddress         string               `protobuf:"bytes,8,opt,name=OwnerAddress,proto3" json:"OwnerAddress,omitempty"`
	TotalStake           float32              `protobuf:"fixed32,9,opt,name=TotalStake,proto3" json:"TotalStake,omitempty"`
	PubKey               string               `protobuf:"bytes,10,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	PubKeyMin            string               `protobuf:"bytes,11,opt,name=PubKeyMin,proto3" json:"PubKeyMin,omitempty"`
	ValidatorAddress     string               `protobuf:"bytes,12,opt,name=ValidatorAddress,proto3" json:"ValidatorAddress,omitempty"`
	Commission           int32                `protobuf:"varint,13,opt,name=Commission,proto3" json:"Commission,omitempty"`
	CreatedAtBlock       int32                `protobuf:"varint,14,opt,name=CreatedAtBlock,proto3" json:"CreatedAtBlock,omitempty"`
	StatusInt            int32                `protobuf:"varint,15,opt,name=StatusInt,proto3" json:"StatusInt,omitempty"`
	TimeUpdate           *timestamp.Timestamp `protobuf:"bytes,16,opt,name=TimeUpdate,proto3" json:"TimeUpdate,omitempty"`
	Stakes               []*StakesInfo        `protobuf:"bytes,17,rep,name=Stakes,proto3" json:"Stakes,omitempty"`
	Blocks               []*BlocksStory       `protobuf:"bytes,18,rep,name=Blocks,proto3" json:"Blocks,omitempty"`
	AmntBlocks           uint64               `protobuf:"varint,19,opt,name=AmntBlocks,proto3" json:"AmntBlocks,omitempty"`
	AmntSlashed          int32                `protobuf:"varint,20,opt,name=AmntSlashed,proto3" json:"AmntSlashed,omitempty"`
	AmnNoBlocks          int32                `protobuf:"varint,21,opt,name=AmnNoBlocks,proto3" json:"AmnNoBlocks,omitempty"`
	AmntSlots            int32                `protobuf:"varint,22,opt,name=AmntSlots,proto3" json:"AmntSlots,omitempty"`
	CommissionNow        int32                `protobuf:"varint,23,opt,name=CommissionNow,proto3" json:"CommissionNow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NodeExt2) Reset()         { *m = NodeExt2{} }
func (m *NodeExt2) String() string { return proto.CompactTextString(m) }
func (*NodeExt2) ProtoMessage()    {}
func (*NodeExt2) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *NodeExt2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeExt2.Unmarshal(m, b)
}
func (m *NodeExt2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeExt2.Marshal(b, m, deterministic)
}
func (m *NodeExt2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeExt2.Merge(m, src)
}
func (m *NodeExt2) XXX_Size() int {
	return xxx_messageInfo_NodeExt2.Size(m)
}
func (m *NodeExt2) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeExt2.DiscardUnknown(m)
}

var xxx_messageInfo_NodeExt2 proto.InternalMessageInfo

func (m *NodeExt2) GetValidatorName() string {
	if m != nil {
		return m.ValidatorName
	}
	return ""
}

func (m *NodeExt2) GetValidatorURL() string {
	if m != nil {
		return m.ValidatorURL
	}
	return ""
}

func (m *NodeExt2) GetValidatorLogoImg() string {
	if m != nil {
		return m.ValidatorLogoImg
	}
	return ""
}

func (m *NodeExt2) GetValidatorDesc() string {
	if m != nil {
		return m.ValidatorDesc
	}
	return ""
}

func (m *NodeExt2) GetUptime() float32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *NodeExt2) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *NodeExt2) GetRewardAddress() string {
	if m != nil {
		return m.RewardAddress
	}
	return ""
}

func (m *NodeExt2) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *NodeExt2) GetTotalStake() float32 {
	if m != nil {
		return m.TotalStake
	}
	return 0
}

func (m *NodeExt2) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *NodeExt2) GetPubKeyMin() string {
	if m != nil {
		return m.PubKeyMin
	}
	return ""
}

func (m *NodeExt2) GetValidatorAddress() string {
	if m != nil {
		return m.ValidatorAddress
	}
	return ""
}

func (m *NodeExt2) GetCommission() int32 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *NodeExt2) GetCreatedAtBlock() int32 {
	if m != nil {
		return m.CreatedAtBlock
	}
	return 0
}

func (m *NodeExt2) GetStatusInt() int32 {
	if m != nil {
		return m.StatusInt
	}
	return 0
}

func (m *NodeExt2) GetTimeUpdate() *timestamp.Timestamp {
	if m != nil {
		return m.TimeUpdate
	}
	return nil
}

func (m *NodeExt2) GetStakes() []*StakesInfo {
	if m != nil {
		return m.Stakes
	}
	return nil
}

func (m *NodeExt2) GetBlocks() []*BlocksStory {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func (m *NodeExt2) GetAmntBlocks() uint64 {
	if m != nil {
		return m.AmntBlocks
	}
	return 0
}

func (m *NodeExt2) GetAmntSlashed() int32 {
	if m != nil {
		return m.AmntSlashed
	}
	return 0
}

func (m *NodeExt2) GetAmnNoBlocks() int32 {
	if m != nil {
		return m.AmnNoBlocks
	}
	return 0
}

func (m *NodeExt2) GetAmntSlots() int32 {
	if m != nil {
		return m.AmntSlots
	}
	return 0
}

func (m *NodeExt2) GetCommissionNow() int32 {
	if m != nil {
		return m.CommissionNow
	}
	return 0
}

// стэк кандидата/валидатора в каких монетах
type StakesInfo struct {
	Owner                string   `protobuf:"bytes,1,opt,name=Owner,proto3" json:"Owner,omitempty"`
	Coin                 string   `protobuf:"bytes,2,opt,name=Coin,proto3" json:"Coin,omitempty"`
	Value                float32  `protobuf:"fixed32,3,opt,name=Value,proto3" json:"Value,omitempty"`
	BipValue             float32  `protobuf:"fixed32,4,opt,name=BipValue,proto3" json:"BipValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StakesInfo) Reset()         { *m = StakesInfo{} }
func (m *StakesInfo) String() string { return proto.CompactTextString(m) }
func (*StakesInfo) ProtoMessage()    {}
func (*StakesInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *StakesInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakesInfo.Unmarshal(m, b)
}
func (m *StakesInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakesInfo.Marshal(b, m, deterministic)
}
func (m *StakesInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakesInfo.Merge(m, src)
}
func (m *StakesInfo) XXX_Size() int {
	return xxx_messageInfo_StakesInfo.Size(m)
}
func (m *StakesInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StakesInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StakesInfo proto.InternalMessageInfo

func (m *StakesInfo) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *StakesInfo) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

func (m *StakesInfo) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *StakesInfo) GetBipValue() float32 {
	if m != nil {
		return m.BipValue
	}
	return 0
}

type BlocksStory struct {
	ID                   uint32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlocksStory) Reset()         { *m = BlocksStory{} }
func (m *BlocksStory) String() string { return proto.CompactTextString(m) }
func (*BlocksStory) ProtoMessage()    {}
func (*BlocksStory) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *BlocksStory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlocksStory.Unmarshal(m, b)
}
func (m *BlocksStory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlocksStory.Marshal(b, m, deterministic)
}
func (m *BlocksStory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlocksStory.Merge(m, src)
}
func (m *BlocksStory) XXX_Size() int {
	return xxx_messageInfo_BlocksStory.Size(m)
}
func (m *BlocksStory) XXX_DiscardUnknown() {
	xxx_messageInfo_BlocksStory.DiscardUnknown(m)
}

var xxx_messageInfo_BlocksStory proto.InternalMessageInfo

func (m *BlocksStory) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *BlocksStory) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// Награда
type ResReward struct {
	Role                 string   `protobuf:"bytes,1,opt,name=Role,proto3" json:"Role,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	PubKey               string   `protobuf:"bytes,3,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	Amnt                 float32  `protobuf:"fixed32,4,opt,name=Amnt,proto3" json:"Amnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResReward) Reset()         { *m = ResReward{} }
func (m *ResReward) String() string { return proto.CompactTextString(m) }
func (*ResReward) ProtoMessage()    {}
func (*ResReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}

func (m *ResReward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResReward.Unmarshal(m, b)
}
func (m *ResReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResReward.Marshal(b, m, deterministic)
}
func (m *ResReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResReward.Merge(m, src)
}
func (m *ResReward) XXX_Size() int {
	return xxx_messageInfo_ResReward.Size(m)
}
func (m *ResReward) XXX_DiscardUnknown() {
	xxx_messageInfo_ResReward.DiscardUnknown(m)
}

var xxx_messageInfo_ResReward proto.InternalMessageInfo

func (m *ResReward) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *ResReward) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ResReward) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *ResReward) GetAmnt() float32 {
	if m != nil {
		return m.Amnt
	}
	return 0
}

//+---- Blocks-List
type BlocksListReq struct {
	Page                 uint32   `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlocksListReq) Reset()         { *m = BlocksListReq{} }
func (m *BlocksListReq) String() string { return proto.CompactTextString(m) }
func (*BlocksListReq) ProtoMessage()    {}
func (*BlocksListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}

func (m *BlocksListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlocksListReq.Unmarshal(m, b)
}
func (m *BlocksListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlocksListReq.Marshal(b, m, deterministic)
}
func (m *BlocksListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlocksListReq.Merge(m, src)
}
func (m *BlocksListReq) XXX_Size() int {
	return xxx_messageInfo_BlocksListReq.Size(m)
}
func (m *BlocksListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BlocksListReq.DiscardUnknown(m)
}

var xxx_messageInfo_BlocksListReq proto.InternalMessageInfo

func (m *BlocksListReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type BlocksListResp struct {
	AllBlocks []*Block1 `protobuf:"bytes,1,rep,name=AllBlocks,proto3" json:"AllBlocks,omitempty"`
	// Доп.инфа по кол.блоков
	TotalBlock uint32 `protobuf:"varint,2,opt,name=TotalBlock,proto3" json:"TotalBlock,omitempty"`
	MinBlock   uint32 `protobuf:"varint,3,opt,name=MinBlock,proto3" json:"MinBlock,omitempty"`
	MaxBlock   uint32 `protobuf:"varint,4,opt,name=MaxBlock,proto3" json:"MaxBlock,omitempty"`
	// Кнопки навигации по страницам:
	BtnLL                uint32   `protobuf:"varint,5,opt,name=BtnLL,proto3" json:"BtnLL,omitempty"`
	BtnL                 uint32   `protobuf:"varint,6,opt,name=BtnL,proto3" json:"BtnL,omitempty"`
	BtnR                 uint32   `protobuf:"varint,7,opt,name=BtnR,proto3" json:"BtnR,omitempty"`
	BtnRR                uint32   `protobuf:"varint,8,opt,name=BtnRR,proto3" json:"BtnRR,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlocksListResp) Reset()         { *m = BlocksListResp{} }
func (m *BlocksListResp) String() string { return proto.CompactTextString(m) }
func (*BlocksListResp) ProtoMessage()    {}
func (*BlocksListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}

func (m *BlocksListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlocksListResp.Unmarshal(m, b)
}
func (m *BlocksListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlocksListResp.Marshal(b, m, deterministic)
}
func (m *BlocksListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlocksListResp.Merge(m, src)
}
func (m *BlocksListResp) XXX_Size() int {
	return xxx_messageInfo_BlocksListResp.Size(m)
}
func (m *BlocksListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BlocksListResp.DiscardUnknown(m)
}

var xxx_messageInfo_BlocksListResp proto.InternalMessageInfo

func (m *BlocksListResp) GetAllBlocks() []*Block1 {
	if m != nil {
		return m.AllBlocks
	}
	return nil
}

func (m *BlocksListResp) GetTotalBlock() uint32 {
	if m != nil {
		return m.TotalBlock
	}
	return 0
}

func (m *BlocksListResp) GetMinBlock() uint32 {
	if m != nil {
		return m.MinBlock
	}
	return 0
}

func (m *BlocksListResp) GetMaxBlock() uint32 {
	if m != nil {
		return m.MaxBlock
	}
	return 0
}

func (m *BlocksListResp) GetBtnLL() uint32 {
	if m != nil {
		return m.BtnLL
	}
	return 0
}

func (m *BlocksListResp) GetBtnL() uint32 {
	if m != nil {
		return m.BtnL
	}
	return 0
}

func (m *BlocksListResp) GetBtnR() uint32 {
	if m != nil {
		return m.BtnR
	}
	return 0
}

func (m *BlocksListResp) GetBtnRR() uint32 {
	if m != nil {
		return m.BtnRR
	}
	return 0
}

//+---- Trxs-List
type TrxsListReq struct {
	Page                 uint32   `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrxsListReq) Reset()         { *m = TrxsListReq{} }
func (m *TrxsListReq) String() string { return proto.CompactTextString(m) }
func (*TrxsListReq) ProtoMessage()    {}
func (*TrxsListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26}
}

func (m *TrxsListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrxsListReq.Unmarshal(m, b)
}
func (m *TrxsListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrxsListReq.Marshal(b, m, deterministic)
}
func (m *TrxsListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrxsListReq.Merge(m, src)
}
func (m *TrxsListReq) XXX_Size() int {
	return xxx_messageInfo_TrxsListReq.Size(m)
}
func (m *TrxsListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TrxsListReq.DiscardUnknown(m)
}

var xxx_messageInfo_TrxsListReq proto.InternalMessageInfo

func (m *TrxsListReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type TrxsListResp struct {
	AllTrns []*Trans1 `protobuf:"bytes,1,rep,name=AllTrns,proto3" json:"AllTrns,omitempty"`
	// Доп.инфа по кол.блоков
	TotalBlock uint32 `protobuf:"varint,2,opt,name=TotalBlock,proto3" json:"TotalBlock,omitempty"`
	// Кнопки навигации по страницам:
	BtnNow               uint32   `protobuf:"varint,3,opt,name=BtnNow,proto3" json:"BtnNow,omitempty"`
	BtnL                 uint32   `protobuf:"varint,4,opt,name=BtnL,proto3" json:"BtnL,omitempty"`
	BtnR                 uint32   `protobuf:"varint,5,opt,name=BtnR,proto3" json:"BtnR,omitempty"`
	BtnRR                uint32   `protobuf:"varint,6,opt,name=BtnRR,proto3" json:"BtnRR,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrxsListResp) Reset()         { *m = TrxsListResp{} }
func (m *TrxsListResp) String() string { return proto.CompactTextString(m) }
func (*TrxsListResp) ProtoMessage()    {}
func (*TrxsListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27}
}

func (m *TrxsListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrxsListResp.Unmarshal(m, b)
}
func (m *TrxsListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrxsListResp.Marshal(b, m, deterministic)
}
func (m *TrxsListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrxsListResp.Merge(m, src)
}
func (m *TrxsListResp) XXX_Size() int {
	return xxx_messageInfo_TrxsListResp.Size(m)
}
func (m *TrxsListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TrxsListResp.DiscardUnknown(m)
}

var xxx_messageInfo_TrxsListResp proto.InternalMessageInfo

func (m *TrxsListResp) GetAllTrns() []*Trans1 {
	if m != nil {
		return m.AllTrns
	}
	return nil
}

func (m *TrxsListResp) GetTotalBlock() uint32 {
	if m != nil {
		return m.TotalBlock
	}
	return 0
}

func (m *TrxsListResp) GetBtnNow() uint32 {
	if m != nil {
		return m.BtnNow
	}
	return 0
}

func (m *TrxsListResp) GetBtnL() uint32 {
	if m != nil {
		return m.BtnL
	}
	return 0
}

func (m *TrxsListResp) GetBtnR() uint32 {
	if m != nil {
		return m.BtnR
	}
	return 0
}

func (m *TrxsListResp) GetBtnRR() uint32 {
	if m != nil {
		return m.BtnRR
	}
	return 0
}

//+---- Nodes-List
type NodesListResp struct {
	AllCandidates        []*NodeExt2 `protobuf:"bytes,1,rep,name=AllCandidates,proto3" json:"AllCandidates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NodesListResp) Reset()         { *m = NodesListResp{} }
func (m *NodesListResp) String() string { return proto.CompactTextString(m) }
func (*NodesListResp) ProtoMessage()    {}
func (*NodesListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{28}
}

func (m *NodesListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesListResp.Unmarshal(m, b)
}
func (m *NodesListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesListResp.Marshal(b, m, deterministic)
}
func (m *NodesListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesListResp.Merge(m, src)
}
func (m *NodesListResp) XXX_Size() int {
	return xxx_messageInfo_NodesListResp.Size(m)
}
func (m *NodesListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesListResp.DiscardUnknown(m)
}

var xxx_messageInfo_NodesListResp proto.InternalMessageInfo

func (m *NodesListResp) GetAllCandidates() []*NodeExt2 {
	if m != nil {
		return m.AllCandidates
	}
	return nil
}

//+---- Coins-List
type CoinsListResp struct {
	AllCoins             []*CoinView `protobuf:"bytes,1,rep,name=AllCoins,proto3" json:"AllCoins,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CoinsListResp) Reset()         { *m = CoinsListResp{} }
func (m *CoinsListResp) String() string { return proto.CompactTextString(m) }
func (*CoinsListResp) ProtoMessage()    {}
func (*CoinsListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{29}
}

func (m *CoinsListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinsListResp.Unmarshal(m, b)
}
func (m *CoinsListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinsListResp.Marshal(b, m, deterministic)
}
func (m *CoinsListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinsListResp.Merge(m, src)
}
func (m *CoinsListResp) XXX_Size() int {
	return xxx_messageInfo_CoinsListResp.Size(m)
}
func (m *CoinsListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinsListResp.DiscardUnknown(m)
}

var xxx_messageInfo_CoinsListResp proto.InternalMessageInfo

func (m *CoinsListResp) GetAllCoins() []*CoinView {
	if m != nil {
		return m.AllCoins
	}
	return nil
}

type CoinView struct {
	ID                   int32    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Ticker               string   `protobuf:"bytes,3,opt,name=Ticker,proto3" json:"Ticker,omitempty"`
	CoinLogoImg          string   `protobuf:"bytes,4,opt,name=CoinLogoImg,proto3" json:"CoinLogoImg,omitempty"`
	PriceBuy             string   `protobuf:"bytes,5,opt,name=PriceBuy,proto3" json:"PriceBuy,omitempty"`
	PriceBuyUSD          string   `protobuf:"bytes,6,opt,name=PriceBuyUSD,proto3" json:"PriceBuyUSD,omitempty"`
	Volume24             string   `protobuf:"bytes,7,opt,name=Volume24,proto3" json:"Volume24,omitempty"`
	Change24             string   `protobuf:"bytes,8,opt,name=Change24,proto3" json:"Change24,omitempty"`
	Change24F32          float32  `protobuf:"fixed32,9,opt,name=Change24f32,proto3" json:"Change24f32,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoinView) Reset()         { *m = CoinView{} }
func (m *CoinView) String() string { return proto.CompactTextString(m) }
func (*CoinView) ProtoMessage()    {}
func (*CoinView) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{30}
}

func (m *CoinView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinView.Unmarshal(m, b)
}
func (m *CoinView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinView.Marshal(b, m, deterministic)
}
func (m *CoinView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinView.Merge(m, src)
}
func (m *CoinView) XXX_Size() int {
	return xxx_messageInfo_CoinView.Size(m)
}
func (m *CoinView) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinView.DiscardUnknown(m)
}

var xxx_messageInfo_CoinView proto.InternalMessageInfo

func (m *CoinView) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *CoinView) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CoinView) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *CoinView) GetCoinLogoImg() string {
	if m != nil {
		return m.CoinLogoImg
	}
	return ""
}

func (m *CoinView) GetPriceBuy() string {
	if m != nil {
		return m.PriceBuy
	}
	return ""
}

func (m *CoinView) GetPriceBuyUSD() string {
	if m != nil {
		return m.PriceBuyUSD
	}
	return ""
}

func (m *CoinView) GetVolume24() string {
	if m != nil {
		return m.Volume24
	}
	return ""
}

func (m *CoinView) GetChange24() string {
	if m != nil {
		return m.Change24
	}
	return ""
}

func (m *CoinView) GetChange24F32() float32 {
	if m != nil {
		return m.Change24F32
	}
	return 0
}

//+---- Coin-1p
type CoinReq struct {
	Ticker1              string   `protobuf:"bytes,1,opt,name=Ticker1,proto3" json:"Ticker1,omitempty"`
	Ticker2              string   `protobuf:"bytes,2,opt,name=Ticker2,proto3" json:"Ticker2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoinReq) Reset()         { *m = CoinReq{} }
func (m *CoinReq) String() string { return proto.CompactTextString(m) }
func (*CoinReq) ProtoMessage()    {}
func (*CoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{31}
}

func (m *CoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinReq.Unmarshal(m, b)
}
func (m *CoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinReq.Marshal(b, m, deterministic)
}
func (m *CoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinReq.Merge(m, src)
}
func (m *CoinReq) XXX_Size() int {
	return xxx_messageInfo_CoinReq.Size(m)
}
func (m *CoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_CoinReq proto.InternalMessageInfo

func (m *CoinReq) GetTicker1() string {
	if m != nil {
		return m.Ticker1
	}
	return ""
}

func (m *CoinReq) GetTicker2() string {
	if m != nil {
		return m.Ticker2
	}
	return ""
}

type CoinResp struct {
	UpdateData           *timestamp.Timestamp `protobuf:"bytes,1,opt,name=UpdateData,proto3" json:"UpdateData,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	TitleCoin            string               `protobuf:"bytes,3,opt,name=TitleCoin,proto3" json:"TitleCoin,omitempty"`
	Transactions         []*OneCoinTrans      `protobuf:"bytes,4,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
	Ticker1              string               `protobuf:"bytes,5,opt,name=Ticker1,proto3" json:"Ticker1,omitempty"`
	Ticker2              string               `protobuf:"bytes,6,opt,name=Ticker2,proto3" json:"Ticker2,omitempty"`
	Other2Coins          []string             `protobuf:"bytes,7,rep,name=Other2Coins,proto3" json:"Other2Coins,omitempty"`
	PriceNowBuy          string               `protobuf:"bytes,8,opt,name=PriceNowBuy,proto3" json:"PriceNowBuy,omitempty"`
	PriceNowSell         string               `protobuf:"bytes,9,opt,name=PriceNowSell,proto3" json:"PriceNowSell,omitempty"`
	Change24             float32              `protobuf:"fixed32,10,opt,name=Change24,proto3" json:"Change24,omitempty"`
	Volume24             float32              `protobuf:"fixed32,11,opt,name=Volume24,proto3" json:"Volume24,omitempty"`
	MyCoin               bool                 `protobuf:"varint,12,opt,name=MyCoin,proto3" json:"MyCoin,omitempty"`
	Creator              string               `protobuf:"bytes,13,opt,name=Creator,proto3" json:"Creator,omitempty"`
	CreatorTXT           string               `protobuf:"bytes,14,opt,name=CreatorTXT,proto3" json:"CreatorTXT,omitempty"`
	CRRPrc               int32                `protobuf:"varint,15,opt,name=CRR_prc,json=CRRPrc,proto3" json:"CRR_prc,omitempty"`
	InitialAmount        string               `protobuf:"bytes,16,opt,name=InitialAmount,proto3" json:"InitialAmount,omitempty"`
	InitialReserve       string               `protobuf:"bytes,17,opt,name=InitialReserve,proto3" json:"InitialReserve,omitempty"`
	Volume               float32              `protobuf:"fixed32,18,opt,name=Volume,proto3" json:"Volume,omitempty"`
	ReserveBalance       string               `protobuf:"bytes,19,opt,name=ReserveBalance,proto3" json:"ReserveBalance,omitempty"`
	CoinInf              *CoinMarketCapData   `protobuf:"bytes,20,opt,name=CoinInf,proto3" json:"CoinInf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CoinResp) Reset()         { *m = CoinResp{} }
func (m *CoinResp) String() string { return proto.CompactTextString(m) }
func (*CoinResp) ProtoMessage()    {}
func (*CoinResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{32}
}

func (m *CoinResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinResp.Unmarshal(m, b)
}
func (m *CoinResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinResp.Marshal(b, m, deterministic)
}
func (m *CoinResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinResp.Merge(m, src)
}
func (m *CoinResp) XXX_Size() int {
	return xxx_messageInfo_CoinResp.Size(m)
}
func (m *CoinResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinResp.DiscardUnknown(m)
}

var xxx_messageInfo_CoinResp proto.InternalMessageInfo

func (m *CoinResp) GetUpdateData() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateData
	}
	return nil
}

func (m *CoinResp) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *CoinResp) GetTitleCoin() string {
	if m != nil {
		return m.TitleCoin
	}
	return ""
}

func (m *CoinResp) GetTransactions() []*OneCoinTrans {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *CoinResp) GetTicker1() string {
	if m != nil {
		return m.Ticker1
	}
	return ""
}

func (m *CoinResp) GetTicker2() string {
	if m != nil {
		return m.Ticker2
	}
	return ""
}

func (m *CoinResp) GetOther2Coins() []string {
	if m != nil {
		return m.Other2Coins
	}
	return nil
}

func (m *CoinResp) GetPriceNowBuy() string {
	if m != nil {
		return m.PriceNowBuy
	}
	return ""
}

func (m *CoinResp) GetPriceNowSell() string {
	if m != nil {
		return m.PriceNowSell
	}
	return ""
}

func (m *CoinResp) GetChange24() float32 {
	if m != nil {
		return m.Change24
	}
	return 0
}

func (m *CoinResp) GetVolume24() float32 {
	if m != nil {
		return m.Volume24
	}
	return 0
}

func (m *CoinResp) GetMyCoin() bool {
	if m != nil {
		return m.MyCoin
	}
	return false
}

func (m *CoinResp) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CoinResp) GetCreatorTXT() string {
	if m != nil {
		return m.CreatorTXT
	}
	return ""
}

func (m *CoinResp) GetCRRPrc() int32 {
	if m != nil {
		return m.CRRPrc
	}
	return 0
}

func (m *CoinResp) GetInitialAmount() string {
	if m != nil {
		return m.InitialAmount
	}
	return ""
}

func (m *CoinResp) GetInitialReserve() string {
	if m != nil {
		return m.InitialReserve
	}
	return ""
}

func (m *CoinResp) GetVolume() float32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *CoinResp) GetReserveBalance() string {
	if m != nil {
		return m.ReserveBalance
	}
	return ""
}

func (m *CoinResp) GetCoinInf() *CoinMarketCapData {
	if m != nil {
		return m.CoinInf
	}
	return nil
}

// Структура Японской-Свечки для графиков
type OneCoinTrans struct {
	Date                 string   `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`
	Open                 float32  `protobuf:"fixed32,2,opt,name=Open,proto3" json:"Open,omitempty"`
	High                 float32  `protobuf:"fixed32,3,opt,name=High,proto3" json:"High,omitempty"`
	Low                  float32  `protobuf:"fixed32,4,opt,name=Low,proto3" json:"Low,omitempty"`
	Close                float32  `protobuf:"fixed32,5,opt,name=Close,proto3" json:"Close,omitempty"`
	Volume               float32  `protobuf:"fixed32,6,opt,name=Volume,proto3" json:"Volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneCoinTrans) Reset()         { *m = OneCoinTrans{} }
func (m *OneCoinTrans) String() string { return proto.CompactTextString(m) }
func (*OneCoinTrans) ProtoMessage()    {}
func (*OneCoinTrans) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{33}
}

func (m *OneCoinTrans) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneCoinTrans.Unmarshal(m, b)
}
func (m *OneCoinTrans) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneCoinTrans.Marshal(b, m, deterministic)
}
func (m *OneCoinTrans) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneCoinTrans.Merge(m, src)
}
func (m *OneCoinTrans) XXX_Size() int {
	return xxx_messageInfo_OneCoinTrans.Size(m)
}
func (m *OneCoinTrans) XXX_DiscardUnknown() {
	xxx_messageInfo_OneCoinTrans.DiscardUnknown(m)
}

var xxx_messageInfo_OneCoinTrans proto.InternalMessageInfo

func (m *OneCoinTrans) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *OneCoinTrans) GetOpen() float32 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *OneCoinTrans) GetHigh() float32 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *OneCoinTrans) GetLow() float32 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *OneCoinTrans) GetClose() float32 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *OneCoinTrans) GetVolume() float32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

// Информация о монете
type CoinMarketCapData struct {
	Name                 string               `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	CoinSymbol           string               `protobuf:"bytes,2,opt,name=CoinSymbol,proto3" json:"CoinSymbol,omitempty"`
	CoinURL              string               `protobuf:"bytes,3,opt,name=CoinURL,proto3" json:"CoinURL,omitempty"`
	CoinLogoImg          string               `protobuf:"bytes,4,opt,name=CoinLogoImg,proto3" json:"CoinLogoImg,omitempty"`
	CoinDesc             string               `protobuf:"bytes,5,opt,name=CoinDesc,proto3" json:"CoinDesc,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,6,opt,name=Time,proto3" json:"Time,omitempty"`
	TimeUpdate           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=TimeUpdate,proto3" json:"TimeUpdate,omitempty"`
	InitialAmount        float32              `protobuf:"fixed32,8,opt,name=InitialAmount,proto3" json:"InitialAmount,omitempty"`
	InitialReserve       float32              `protobuf:"fixed32,9,opt,name=InitialReserve,proto3" json:"InitialReserve,omitempty"`
	ConstantReserveRatio int32                `protobuf:"varint,10,opt,name=ConstantReserveRatio,proto3" json:"ConstantReserveRatio,omitempty"`
	VolumeNow            float32              `protobuf:"fixed32,11,opt,name=VolumeNow,proto3" json:"VolumeNow,omitempty"`
	ReserveBalanceNow    float32              `protobuf:"fixed32,12,opt,name=ReserveBalanceNow,proto3" json:"ReserveBalanceNow,omitempty"`
	Creator              string               `protobuf:"bytes,13,opt,name=Creator,proto3" json:"Creator,omitempty"`
	AmntTrans24X7        int32                `protobuf:"varint,14,opt,name=AmntTrans24x7,proto3" json:"AmntTrans24x7,omitempty"`
	Transactions         []*CoinActionpData   `protobuf:"bytes,15,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CoinMarketCapData) Reset()         { *m = CoinMarketCapData{} }
func (m *CoinMarketCapData) String() string { return proto.CompactTextString(m) }
func (*CoinMarketCapData) ProtoMessage()    {}
func (*CoinMarketCapData) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{34}
}

func (m *CoinMarketCapData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinMarketCapData.Unmarshal(m, b)
}
func (m *CoinMarketCapData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinMarketCapData.Marshal(b, m, deterministic)
}
func (m *CoinMarketCapData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinMarketCapData.Merge(m, src)
}
func (m *CoinMarketCapData) XXX_Size() int {
	return xxx_messageInfo_CoinMarketCapData.Size(m)
}
func (m *CoinMarketCapData) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinMarketCapData.DiscardUnknown(m)
}

var xxx_messageInfo_CoinMarketCapData proto.InternalMessageInfo

func (m *CoinMarketCapData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CoinMarketCapData) GetCoinSymbol() string {
	if m != nil {
		return m.CoinSymbol
	}
	return ""
}

func (m *CoinMarketCapData) GetCoinURL() string {
	if m != nil {
		return m.CoinURL
	}
	return ""
}

func (m *CoinMarketCapData) GetCoinLogoImg() string {
	if m != nil {
		return m.CoinLogoImg
	}
	return ""
}

func (m *CoinMarketCapData) GetCoinDesc() string {
	if m != nil {
		return m.CoinDesc
	}
	return ""
}

func (m *CoinMarketCapData) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *CoinMarketCapData) GetTimeUpdate() *timestamp.Timestamp {
	if m != nil {
		return m.TimeUpdate
	}
	return nil
}

func (m *CoinMarketCapData) GetInitialAmount() float32 {
	if m != nil {
		return m.InitialAmount
	}
	return 0
}

func (m *CoinMarketCapData) GetInitialReserve() float32 {
	if m != nil {
		return m.InitialReserve
	}
	return 0
}

func (m *CoinMarketCapData) GetConstantReserveRatio() int32 {
	if m != nil {
		return m.ConstantReserveRatio
	}
	return 0
}

func (m *CoinMarketCapData) GetVolumeNow() float32 {
	if m != nil {
		return m.VolumeNow
	}
	return 0
}

func (m *CoinMarketCapData) GetReserveBalanceNow() float32 {
	if m != nil {
		return m.ReserveBalanceNow
	}
	return 0
}

func (m *CoinMarketCapData) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CoinMarketCapData) GetAmntTrans24X7() int32 {
	if m != nil {
		return m.AmntTrans24X7
	}
	return 0
}

func (m *CoinMarketCapData) GetTransactions() []*CoinActionpData {
	if m != nil {
		return m.Transactions
	}
	return nil
}

// Движение монеты
type CoinActionpData struct {
	Hash                 string               `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	Type                 int32                `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	CoinToBuy            string               `protobuf:"bytes,4,opt,name=CoinToBuy,proto3" json:"CoinToBuy,omitempty"`
	CoinToSell           string               `protobuf:"bytes,5,opt,name=CoinToSell,proto3" json:"CoinToSell,omitempty"`
	ValueToBuy           float32              `protobuf:"fixed32,6,opt,name=ValueToBuy,proto3" json:"ValueToBuy,omitempty"`
	ValueToSell          float32              `protobuf:"fixed32,7,opt,name=ValueToSell,proto3" json:"ValueToSell,omitempty"`
	Price                float32              `protobuf:"fixed32,8,opt,name=Price,proto3" json:"Price,omitempty"`
	Volume               float32              `protobuf:"fixed32,9,opt,name=Volume,proto3" json:"Volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CoinActionpData) Reset()         { *m = CoinActionpData{} }
func (m *CoinActionpData) String() string { return proto.CompactTextString(m) }
func (*CoinActionpData) ProtoMessage()    {}
func (*CoinActionpData) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{35}
}

func (m *CoinActionpData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinActionpData.Unmarshal(m, b)
}
func (m *CoinActionpData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinActionpData.Marshal(b, m, deterministic)
}
func (m *CoinActionpData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinActionpData.Merge(m, src)
}
func (m *CoinActionpData) XXX_Size() int {
	return xxx_messageInfo_CoinActionpData.Size(m)
}
func (m *CoinActionpData) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinActionpData.DiscardUnknown(m)
}

var xxx_messageInfo_CoinActionpData proto.InternalMessageInfo

func (m *CoinActionpData) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *CoinActionpData) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *CoinActionpData) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CoinActionpData) GetCoinToBuy() string {
	if m != nil {
		return m.CoinToBuy
	}
	return ""
}

func (m *CoinActionpData) GetCoinToSell() string {
	if m != nil {
		return m.CoinToSell
	}
	return ""
}

func (m *CoinActionpData) GetValueToBuy() float32 {
	if m != nil {
		return m.ValueToBuy
	}
	return 0
}

func (m *CoinActionpData) GetValueToSell() float32 {
	if m != nil {
		return m.ValueToSell
	}
	return 0
}

func (m *CoinActionpData) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *CoinActionpData) GetVolume() float32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

//+---- Tasks-List
type WalletListReq struct {
	Wallet               string   `protobuf:"bytes,1,opt,name=Wallet,proto3" json:"Wallet,omitempty"`
	Page                 uint32   `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletListReq) Reset()         { *m = WalletListReq{} }
func (m *WalletListReq) String() string { return proto.CompactTextString(m) }
func (*WalletListReq) ProtoMessage()    {}
func (*WalletListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{36}
}

func (m *WalletListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletListReq.Unmarshal(m, b)
}
func (m *WalletListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletListReq.Marshal(b, m, deterministic)
}
func (m *WalletListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletListReq.Merge(m, src)
}
func (m *WalletListReq) XXX_Size() int {
	return xxx_messageInfo_WalletListReq.Size(m)
}
func (m *WalletListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletListReq.DiscardUnknown(m)
}

var xxx_messageInfo_WalletListReq proto.InternalMessageInfo

func (m *WalletListReq) GetWallet() string {
	if m != nil {
		return m.Wallet
	}
	return ""
}

func (m *WalletListReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type TasksListResp struct {
	List []*TaskOne `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	// Кнопки навигации по страницам:
	BtnNow               uint32   `protobuf:"varint,2,opt,name=BtnNow,proto3" json:"BtnNow,omitempty"`
	BtnL                 uint32   `protobuf:"varint,3,opt,name=BtnL,proto3" json:"BtnL,omitempty"`
	BtnR                 uint32   `protobuf:"varint,4,opt,name=BtnR,proto3" json:"BtnR,omitempty"`
	BtnRR                uint32   `protobuf:"varint,5,opt,name=BtnRR,proto3" json:"BtnRR,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TasksListResp) Reset()         { *m = TasksListResp{} }
func (m *TasksListResp) String() string { return proto.CompactTextString(m) }
func (*TasksListResp) ProtoMessage()    {}
func (*TasksListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{37}
}

func (m *TasksListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TasksListResp.Unmarshal(m, b)
}
func (m *TasksListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TasksListResp.Marshal(b, m, deterministic)
}
func (m *TasksListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TasksListResp.Merge(m, src)
}
func (m *TasksListResp) XXX_Size() int {
	return xxx_messageInfo_TasksListResp.Size(m)
}
func (m *TasksListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TasksListResp.DiscardUnknown(m)
}

var xxx_messageInfo_TasksListResp proto.InternalMessageInfo

func (m *TasksListResp) GetList() []*TaskOne {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *TasksListResp) GetBtnNow() uint32 {
	if m != nil {
		return m.BtnNow
	}
	return 0
}

func (m *TasksListResp) GetBtnL() uint32 {
	if m != nil {
		return m.BtnL
	}
	return 0
}

func (m *TasksListResp) GetBtnR() uint32 {
	if m != nil {
		return m.BtnR
	}
	return 0
}

func (m *TasksListResp) GetBtnRR() uint32 {
	if m != nil {
		return m.BtnRR
	}
	return 0
}

//+---- Wallet-1
type WalletReq struct {
	Wallet               string   `protobuf:"bytes,1,opt,name=Wallet,proto3" json:"Wallet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletReq) Reset()         { *m = WalletReq{} }
func (m *WalletReq) String() string { return proto.CompactTextString(m) }
func (*WalletReq) ProtoMessage()    {}
func (*WalletReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{38}
}

func (m *WalletReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletReq.Unmarshal(m, b)
}
func (m *WalletReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletReq.Marshal(b, m, deterministic)
}
func (m *WalletReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletReq.Merge(m, src)
}
func (m *WalletReq) XXX_Size() int {
	return xxx_messageInfo_WalletReq.Size(m)
}
func (m *WalletReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletReq.DiscardUnknown(m)
}

var xxx_messageInfo_WalletReq proto.InternalMessageInfo

func (m *WalletReq) GetWallet() string {
	if m != nil {
		return m.Wallet
	}
	return ""
}

type WalletResp struct {
	WalletCoins          []*WalletCoin1 `protobuf:"bytes,1,rep,name=WalletCoins,proto3" json:"WalletCoins,omitempty"`
	TotalAmntInBaseCoin  uint32         `protobuf:"varint,2,opt,name=TotalAmntInBaseCoin,proto3" json:"TotalAmntInBaseCoin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *WalletResp) Reset()         { *m = WalletResp{} }
func (m *WalletResp) String() string { return proto.CompactTextString(m) }
func (*WalletResp) ProtoMessage()    {}
func (*WalletResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{39}
}

func (m *WalletResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletResp.Unmarshal(m, b)
}
func (m *WalletResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletResp.Marshal(b, m, deterministic)
}
func (m *WalletResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletResp.Merge(m, src)
}
func (m *WalletResp) XXX_Size() int {
	return xxx_messageInfo_WalletResp.Size(m)
}
func (m *WalletResp) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletResp.DiscardUnknown(m)
}

var xxx_messageInfo_WalletResp proto.InternalMessageInfo

func (m *WalletResp) GetWalletCoins() []*WalletCoin1 {
	if m != nil {
		return m.WalletCoins
	}
	return nil
}

func (m *WalletResp) GetTotalAmntInBaseCoin() uint32 {
	if m != nil {
		return m.TotalAmntInBaseCoin
	}
	return 0
}

type WalletCoin1 struct {
	Ticker               string   `protobuf:"bytes,1,opt,name=Ticker,proto3" json:"Ticker,omitempty"`
	Amnt                 float32  `protobuf:"fixed32,2,opt,name=Amnt,proto3" json:"Amnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletCoin1) Reset()         { *m = WalletCoin1{} }
func (m *WalletCoin1) String() string { return proto.CompactTextString(m) }
func (*WalletCoin1) ProtoMessage()    {}
func (*WalletCoin1) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{40}
}

func (m *WalletCoin1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletCoin1.Unmarshal(m, b)
}
func (m *WalletCoin1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletCoin1.Marshal(b, m, deterministic)
}
func (m *WalletCoin1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletCoin1.Merge(m, src)
}
func (m *WalletCoin1) XXX_Size() int {
	return xxx_messageInfo_WalletCoin1.Size(m)
}
func (m *WalletCoin1) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletCoin1.DiscardUnknown(m)
}

var xxx_messageInfo_WalletCoin1 proto.InternalMessageInfo

func (m *WalletCoin1) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *WalletCoin1) GetAmnt() float32 {
	if m != nil {
		return m.Amnt
	}
	return 0
}

type WalletRewardsResp struct {
	AllReward            []*ResReward `protobuf:"bytes,1,rep,name=AllReward,proto3" json:"AllReward,omitempty"`
	TotalReward          float32      `protobuf:"fixed32,2,opt,name=TotalReward,proto3" json:"TotalReward,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *WalletRewardsResp) Reset()         { *m = WalletRewardsResp{} }
func (m *WalletRewardsResp) String() string { return proto.CompactTextString(m) }
func (*WalletRewardsResp) ProtoMessage()    {}
func (*WalletRewardsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{41}
}

func (m *WalletRewardsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletRewardsResp.Unmarshal(m, b)
}
func (m *WalletRewardsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletRewardsResp.Marshal(b, m, deterministic)
}
func (m *WalletRewardsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletRewardsResp.Merge(m, src)
}
func (m *WalletRewardsResp) XXX_Size() int {
	return xxx_messageInfo_WalletRewardsResp.Size(m)
}
func (m *WalletRewardsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletRewardsResp.DiscardUnknown(m)
}

var xxx_messageInfo_WalletRewardsResp proto.InternalMessageInfo

func (m *WalletRewardsResp) GetAllReward() []*ResReward {
	if m != nil {
		return m.AllReward
	}
	return nil
}

func (m *WalletRewardsResp) GetTotalReward() float32 {
	if m != nil {
		return m.TotalReward
	}
	return 0
}

type WalletDelegateResp struct {
	AllDeleg             []*Delegate `protobuf:"bytes,1,rep,name=AllDeleg,proto3" json:"AllDeleg,omitempty"`
	TotalDelegate        float32     `protobuf:"fixed32,2,opt,name=TotalDelegate,proto3" json:"TotalDelegate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WalletDelegateResp) Reset()         { *m = WalletDelegateResp{} }
func (m *WalletDelegateResp) String() string { return proto.CompactTextString(m) }
func (*WalletDelegateResp) ProtoMessage()    {}
func (*WalletDelegateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{42}
}

func (m *WalletDelegateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletDelegateResp.Unmarshal(m, b)
}
func (m *WalletDelegateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletDelegateResp.Marshal(b, m, deterministic)
}
func (m *WalletDelegateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletDelegateResp.Merge(m, src)
}
func (m *WalletDelegateResp) XXX_Size() int {
	return xxx_messageInfo_WalletDelegateResp.Size(m)
}
func (m *WalletDelegateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletDelegateResp.DiscardUnknown(m)
}

var xxx_messageInfo_WalletDelegateResp proto.InternalMessageInfo

func (m *WalletDelegateResp) GetAllDeleg() []*Delegate {
	if m != nil {
		return m.AllDeleg
	}
	return nil
}

func (m *WalletDelegateResp) GetTotalDelegate() float32 {
	if m != nil {
		return m.TotalDelegate
	}
	return 0
}

type Delegate struct {
	Validator            string   `protobuf:"bytes,1,opt,name=Validator,proto3" json:"Validator,omitempty"`
	ValidatorMin         string   `protobuf:"bytes,2,opt,name=ValidatorMin,proto3" json:"ValidatorMin,omitempty"`
	Coin                 string   `protobuf:"bytes,3,opt,name=Coin,proto3" json:"Coin,omitempty"`
	Value                float32  `protobuf:"fixed32,4,opt,name=Value,proto3" json:"Value,omitempty"`
	ValueBip             float32  `protobuf:"fixed32,5,opt,name=ValueBip,proto3" json:"ValueBip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Delegate) Reset()         { *m = Delegate{} }
func (m *Delegate) String() string { return proto.CompactTextString(m) }
func (*Delegate) ProtoMessage()    {}
func (*Delegate) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{43}
}

func (m *Delegate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Delegate.Unmarshal(m, b)
}
func (m *Delegate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Delegate.Marshal(b, m, deterministic)
}
func (m *Delegate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Delegate.Merge(m, src)
}
func (m *Delegate) XXX_Size() int {
	return xxx_messageInfo_Delegate.Size(m)
}
func (m *Delegate) XXX_DiscardUnknown() {
	xxx_messageInfo_Delegate.DiscardUnknown(m)
}

var xxx_messageInfo_Delegate proto.InternalMessageInfo

func (m *Delegate) GetValidator() string {
	if m != nil {
		return m.Validator
	}
	return ""
}

func (m *Delegate) GetValidatorMin() string {
	if m != nil {
		return m.ValidatorMin
	}
	return ""
}

func (m *Delegate) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

func (m *Delegate) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Delegate) GetValueBip() float32 {
	if m != nil {
		return m.ValueBip
	}
	return 0
}

//+---- Sync
type SyncResp struct {
	LastSync             uint32   `protobuf:"varint,1,opt,name=LastSync,proto3" json:"LastSync,omitempty"`
	Current              uint32   `protobuf:"varint,2,opt,name=Current,proto3" json:"Current,omitempty"`
	ChainNet             string   `protobuf:"bytes,3,opt,name=ChainNet,proto3" json:"ChainNet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncResp) Reset()         { *m = SyncResp{} }
func (m *SyncResp) String() string { return proto.CompactTextString(m) }
func (*SyncResp) ProtoMessage()    {}
func (*SyncResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{44}
}

func (m *SyncResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncResp.Unmarshal(m, b)
}
func (m *SyncResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncResp.Marshal(b, m, deterministic)
}
func (m *SyncResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncResp.Merge(m, src)
}
func (m *SyncResp) XXX_Size() int {
	return xxx_messageInfo_SyncResp.Size(m)
}
func (m *SyncResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncResp.DiscardUnknown(m)
}

var xxx_messageInfo_SyncResp proto.InternalMessageInfo

func (m *SyncResp) GetLastSync() uint32 {
	if m != nil {
		return m.LastSync
	}
	return 0
}

func (m *SyncResp) GetCurrent() uint32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *SyncResp) GetChainNet() string {
	if m != nil {
		return m.ChainNet
	}
	return ""
}

//+---- BIP/MNT
type CoinBaseResp struct {
	Ticker               string   `protobuf:"bytes,1,opt,name=Ticker,proto3" json:"Ticker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoinBaseResp) Reset()         { *m = CoinBaseResp{} }
func (m *CoinBaseResp) String() string { return proto.CompactTextString(m) }
func (*CoinBaseResp) ProtoMessage()    {}
func (*CoinBaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{45}
}

func (m *CoinBaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinBaseResp.Unmarshal(m, b)
}
func (m *CoinBaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinBaseResp.Marshal(b, m, deterministic)
}
func (m *CoinBaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinBaseResp.Merge(m, src)
}
func (m *CoinBaseResp) XXX_Size() int {
	return xxx_messageInfo_CoinBaseResp.Size(m)
}
func (m *CoinBaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinBaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_CoinBaseResp proto.InternalMessageInfo

func (m *CoinBaseResp) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

//+---- Wallet-Action
// Результат выполнения операции
type ActionResp struct {
	Status               bool     `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	TrxHash              string   `protobuf:"bytes,2,opt,name=TrxHash,proto3" json:"TrxHash,omitempty"`
	ErrMsg               string   `protobuf:"bytes,3,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionResp) Reset()         { *m = ActionResp{} }
func (m *ActionResp) String() string { return proto.CompactTextString(m) }
func (*ActionResp) ProtoMessage()    {}
func (*ActionResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{46}
}

func (m *ActionResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionResp.Unmarshal(m, b)
}
func (m *ActionResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionResp.Marshal(b, m, deterministic)
}
func (m *ActionResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionResp.Merge(m, src)
}
func (m *ActionResp) XXX_Size() int {
	return xxx_messageInfo_ActionResp.Size(m)
}
func (m *ActionResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionResp.DiscardUnknown(m)
}

var xxx_messageInfo_ActionResp proto.InternalMessageInfo

func (m *ActionResp) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *ActionResp) GetTrxHash() string {
	if m != nil {
		return m.TrxHash
	}
	return ""
}

func (m *ActionResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type SendCoinReq struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Coin                 string   `protobuf:"bytes,2,opt,name=Coin,proto3" json:"Coin,omitempty"`
	FeeCoin              string   `protobuf:"bytes,3,opt,name=FeeCoin,proto3" json:"FeeCoin,omitempty"`
	Value                float32  `protobuf:"fixed32,4,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendCoinReq) Reset()         { *m = SendCoinReq{} }
func (m *SendCoinReq) String() string { return proto.CompactTextString(m) }
func (*SendCoinReq) ProtoMessage()    {}
func (*SendCoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{47}
}

func (m *SendCoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendCoinReq.Unmarshal(m, b)
}
func (m *SendCoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendCoinReq.Marshal(b, m, deterministic)
}
func (m *SendCoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCoinReq.Merge(m, src)
}
func (m *SendCoinReq) XXX_Size() int {
	return xxx_messageInfo_SendCoinReq.Size(m)
}
func (m *SendCoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendCoinReq proto.InternalMessageInfo

func (m *SendCoinReq) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SendCoinReq) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

func (m *SendCoinReq) GetFeeCoin() string {
	if m != nil {
		return m.FeeCoin
	}
	return ""
}

func (m *SendCoinReq) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type DelegCoinReq struct {
	DelegCoin            string   `protobuf:"bytes,1,opt,name=DelegCoin,proto3" json:"DelegCoin,omitempty"`
	Validator            string   `protobuf:"bytes,2,opt,name=Validator,proto3" json:"Validator,omitempty"`
	ValueDeleg           float32  `protobuf:"fixed32,3,opt,name=ValueDeleg,proto3" json:"ValueDeleg,omitempty"`
	FeeCoin              string   `protobuf:"bytes,4,opt,name=FeeCoin,proto3" json:"FeeCoin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelegCoinReq) Reset()         { *m = DelegCoinReq{} }
func (m *DelegCoinReq) String() string { return proto.CompactTextString(m) }
func (*DelegCoinReq) ProtoMessage()    {}
func (*DelegCoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{48}
}

func (m *DelegCoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegCoinReq.Unmarshal(m, b)
}
func (m *DelegCoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegCoinReq.Marshal(b, m, deterministic)
}
func (m *DelegCoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegCoinReq.Merge(m, src)
}
func (m *DelegCoinReq) XXX_Size() int {
	return xxx_messageInfo_DelegCoinReq.Size(m)
}
func (m *DelegCoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegCoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelegCoinReq proto.InternalMessageInfo

func (m *DelegCoinReq) GetDelegCoin() string {
	if m != nil {
		return m.DelegCoin
	}
	return ""
}

func (m *DelegCoinReq) GetValidator() string {
	if m != nil {
		return m.Validator
	}
	return ""
}

func (m *DelegCoinReq) GetValueDeleg() float32 {
	if m != nil {
		return m.ValueDeleg
	}
	return 0
}

func (m *DelegCoinReq) GetFeeCoin() string {
	if m != nil {
		return m.FeeCoin
	}
	return ""
}

type DeclareNodeReq struct {
	Validator            string   `protobuf:"bytes,1,opt,name=Validator,proto3" json:"Validator,omitempty"`
	Comm                 uint32   `protobuf:"varint,2,opt,name=Comm,proto3" json:"Comm,omitempty"`
	TaxCoin              string   `protobuf:"bytes,3,opt,name=TaxCoin,proto3" json:"TaxCoin,omitempty"`
	ValueStart           int64    `protobuf:"varint,4,opt,name=ValueStart,proto3" json:"ValueStart,omitempty"`
	FeeCoin              string   `protobuf:"bytes,5,opt,name=FeeCoin,proto3" json:"FeeCoin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeclareNodeReq) Reset()         { *m = DeclareNodeReq{} }
func (m *DeclareNodeReq) String() string { return proto.CompactTextString(m) }
func (*DeclareNodeReq) ProtoMessage()    {}
func (*DeclareNodeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{49}
}

func (m *DeclareNodeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeclareNodeReq.Unmarshal(m, b)
}
func (m *DeclareNodeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeclareNodeReq.Marshal(b, m, deterministic)
}
func (m *DeclareNodeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeclareNodeReq.Merge(m, src)
}
func (m *DeclareNodeReq) XXX_Size() int {
	return xxx_messageInfo_DeclareNodeReq.Size(m)
}
func (m *DeclareNodeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeclareNodeReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeclareNodeReq proto.InternalMessageInfo

func (m *DeclareNodeReq) GetValidator() string {
	if m != nil {
		return m.Validator
	}
	return ""
}

func (m *DeclareNodeReq) GetComm() uint32 {
	if m != nil {
		return m.Comm
	}
	return 0
}

func (m *DeclareNodeReq) GetTaxCoin() string {
	if m != nil {
		return m.TaxCoin
	}
	return ""
}

func (m *DeclareNodeReq) GetValueStart() int64 {
	if m != nil {
		return m.ValueStart
	}
	return 0
}

func (m *DeclareNodeReq) GetFeeCoin() string {
	if m != nil {
		return m.FeeCoin
	}
	return ""
}

type StartStopNodeReq struct {
	Validator            string   `protobuf:"bytes,1,opt,name=Validator,proto3" json:"Validator,omitempty"`
	OnOff                bool     `protobuf:"varint,2,opt,name=OnOff,proto3" json:"OnOff,omitempty"`
	FeeCoin              string   `protobuf:"bytes,3,opt,name=FeeCoin,proto3" json:"FeeCoin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartStopNodeReq) Reset()         { *m = StartStopNodeReq{} }
func (m *StartStopNodeReq) String() string { return proto.CompactTextString(m) }
func (*StartStopNodeReq) ProtoMessage()    {}
func (*StartStopNodeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{50}
}

func (m *StartStopNodeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartStopNodeReq.Unmarshal(m, b)
}
func (m *StartStopNodeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartStopNodeReq.Marshal(b, m, deterministic)
}
func (m *StartStopNodeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartStopNodeReq.Merge(m, src)
}
func (m *StartStopNodeReq) XXX_Size() int {
	return xxx_messageInfo_StartStopNodeReq.Size(m)
}
func (m *StartStopNodeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StartStopNodeReq.DiscardUnknown(m)
}

var xxx_messageInfo_StartStopNodeReq proto.InternalMessageInfo

func (m *StartStopNodeReq) GetValidator() string {
	if m != nil {
		return m.Validator
	}
	return ""
}

func (m *StartStopNodeReq) GetOnOff() bool {
	if m != nil {
		return m.OnOff
	}
	return false
}

func (m *StartStopNodeReq) GetFeeCoin() string {
	if m != nil {
		return m.FeeCoin
	}
	return ""
}

type CreateCoinReq struct {
	NameCoin             string   `protobuf:"bytes,1,opt,name=NameCoin,proto3" json:"NameCoin,omitempty"`
	TickerCoin           string   `protobuf:"bytes,2,opt,name=TickerCoin,proto3" json:"TickerCoin,omitempty"`
	InitAmnt             int64    `protobuf:"varint,3,opt,name=InitAmnt,proto3" json:"InitAmnt,omitempty"`
	InitResrv            int64    `protobuf:"varint,4,opt,name=InitResrv,proto3" json:"InitResrv,omitempty"`
	CRR                  uint32   `protobuf:"varint,5,opt,name=CRR,proto3" json:"CRR,omitempty"`
	FeeCoin              string   `protobuf:"bytes,6,opt,name=FeeCoin,proto3" json:"FeeCoin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCoinReq) Reset()         { *m = CreateCoinReq{} }
func (m *CreateCoinReq) String() string { return proto.CompactTextString(m) }
func (*CreateCoinReq) ProtoMessage()    {}
func (*CreateCoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{51}
}

func (m *CreateCoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCoinReq.Unmarshal(m, b)
}
func (m *CreateCoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCoinReq.Marshal(b, m, deterministic)
}
func (m *CreateCoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCoinReq.Merge(m, src)
}
func (m *CreateCoinReq) XXX_Size() int {
	return xxx_messageInfo_CreateCoinReq.Size(m)
}
func (m *CreateCoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCoinReq proto.InternalMessageInfo

func (m *CreateCoinReq) GetNameCoin() string {
	if m != nil {
		return m.NameCoin
	}
	return ""
}

func (m *CreateCoinReq) GetTickerCoin() string {
	if m != nil {
		return m.TickerCoin
	}
	return ""
}

func (m *CreateCoinReq) GetInitAmnt() int64 {
	if m != nil {
		return m.InitAmnt
	}
	return 0
}

func (m *CreateCoinReq) GetInitResrv() int64 {
	if m != nil {
		return m.InitResrv
	}
	return 0
}

func (m *CreateCoinReq) GetCRR() uint32 {
	if m != nil {
		return m.CRR
	}
	return 0
}

func (m *CreateCoinReq) GetFeeCoin() string {
	if m != nil {
		return m.FeeCoin
	}
	return ""
}

type CreateCheckReq struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=Coin,proto3" json:"Coin,omitempty"`
	Value                float32  `protobuf:"fixed32,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Pswrd                string   `protobuf:"bytes,3,opt,name=Pswrd,proto3" json:"Pswrd,omitempty"`
	Nonce                uint64   `protobuf:"varint,4,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCheckReq) Reset()         { *m = CreateCheckReq{} }
func (m *CreateCheckReq) String() string { return proto.CompactTextString(m) }
func (*CreateCheckReq) ProtoMessage()    {}
func (*CreateCheckReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{52}
}

func (m *CreateCheckReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCheckReq.Unmarshal(m, b)
}
func (m *CreateCheckReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCheckReq.Marshal(b, m, deterministic)
}
func (m *CreateCheckReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCheckReq.Merge(m, src)
}
func (m *CreateCheckReq) XXX_Size() int {
	return xxx_messageInfo_CreateCheckReq.Size(m)
}
func (m *CreateCheckReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCheckReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCheckReq proto.InternalMessageInfo

func (m *CreateCheckReq) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

func (m *CreateCheckReq) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *CreateCheckReq) GetPswrd() string {
	if m != nil {
		return m.Pswrd
	}
	return ""
}

func (m *CreateCheckReq) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type RedeemCheckReq struct {
	Check                string   `protobuf:"bytes,1,opt,name=Check,proto3" json:"Check,omitempty"`
	Pswrd                string   `protobuf:"bytes,2,opt,name=Pswrd,proto3" json:"Pswrd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedeemCheckReq) Reset()         { *m = RedeemCheckReq{} }
func (m *RedeemCheckReq) String() string { return proto.CompactTextString(m) }
func (*RedeemCheckReq) ProtoMessage()    {}
func (*RedeemCheckReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{53}
}

func (m *RedeemCheckReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedeemCheckReq.Unmarshal(m, b)
}
func (m *RedeemCheckReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedeemCheckReq.Marshal(b, m, deterministic)
}
func (m *RedeemCheckReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedeemCheckReq.Merge(m, src)
}
func (m *RedeemCheckReq) XXX_Size() int {
	return xxx_messageInfo_RedeemCheckReq.Size(m)
}
func (m *RedeemCheckReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RedeemCheckReq.DiscardUnknown(m)
}

var xxx_messageInfo_RedeemCheckReq proto.InternalMessageInfo

func (m *RedeemCheckReq) GetCheck() string {
	if m != nil {
		return m.Check
	}
	return ""
}

func (m *RedeemCheckReq) GetPswrd() string {
	if m != nil {
		return m.Pswrd
	}
	return ""
}

type NewNodeInfoReq struct {
	Title                string   `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	WWW                  string   `protobuf:"bytes,2,opt,name=WWW,proto3" json:"WWW,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Icon                 string   `protobuf:"bytes,4,opt,name=Icon,proto3" json:"Icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewNodeInfoReq) Reset()         { *m = NewNodeInfoReq{} }
func (m *NewNodeInfoReq) String() string { return proto.CompactTextString(m) }
func (*NewNodeInfoReq) ProtoMessage()    {}
func (*NewNodeInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{54}
}

func (m *NewNodeInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewNodeInfoReq.Unmarshal(m, b)
}
func (m *NewNodeInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewNodeInfoReq.Marshal(b, m, deterministic)
}
func (m *NewNodeInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewNodeInfoReq.Merge(m, src)
}
func (m *NewNodeInfoReq) XXX_Size() int {
	return xxx_messageInfo_NewNodeInfoReq.Size(m)
}
func (m *NewNodeInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_NewNodeInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_NewNodeInfoReq proto.InternalMessageInfo

func (m *NewNodeInfoReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NewNodeInfoReq) GetWWW() string {
	if m != nil {
		return m.WWW
	}
	return ""
}

func (m *NewNodeInfoReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *NewNodeInfoReq) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

type NewCoinInfoReq struct {
	WWW                  string   `protobuf:"bytes,1,opt,name=WWW,proto3" json:"WWW,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	Icon                 string   `protobuf:"bytes,3,opt,name=Icon,proto3" json:"Icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewCoinInfoReq) Reset()         { *m = NewCoinInfoReq{} }
func (m *NewCoinInfoReq) String() string { return proto.CompactTextString(m) }
func (*NewCoinInfoReq) ProtoMessage()    {}
func (*NewCoinInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{55}
}

func (m *NewCoinInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewCoinInfoReq.Unmarshal(m, b)
}
func (m *NewCoinInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewCoinInfoReq.Marshal(b, m, deterministic)
}
func (m *NewCoinInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewCoinInfoReq.Merge(m, src)
}
func (m *NewCoinInfoReq) XXX_Size() int {
	return xxx_messageInfo_NewCoinInfoReq.Size(m)
}
func (m *NewCoinInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_NewCoinInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_NewCoinInfoReq proto.InternalMessageInfo

func (m *NewCoinInfoReq) GetWWW() string {
	if m != nil {
		return m.WWW
	}
	return ""
}

func (m *NewCoinInfoReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *NewCoinInfoReq) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func init() {
	proto.RegisterType((*NilReq)(nil), "NilReq")
	proto.RegisterType((*SessionID)(nil), "SessionID")
	proto.RegisterType((*SeedPhrase)(nil), "SeedPhrase")
	proto.RegisterType((*AtasksOutReq)(nil), "AtasksOutReq")
	proto.RegisterType((*ReturnAPITask)(nil), "ReturnAPITask")
	proto.RegisterType((*TaskOne)(nil), "TaskOne")
	proto.RegisterType((*ResQ)(nil), "ResQ")
	proto.RegisterType((*NodeTodoQ)(nil), "NodeTodoQ")
	proto.RegisterType((*TodoOneQ)(nil), "TodoOneQ")
	proto.RegisterType((*BlockInfoReq)(nil), "BlockInfoReq")
	proto.RegisterType((*RetJSONBlock)(nil), "RetJSONBlock")
	proto.RegisterType((*Block1)(nil), "Block1")
	proto.RegisterType((*Block1Transaction)(nil), "Block1Transaction")
	proto.RegisterType((*Block1Events)(nil), "Block1Events")
	proto.RegisterType((*Block1Validator)(nil), "Block1Validator")
	proto.RegisterType((*TrxInfoReq)(nil), "TrxInfoReq")
	proto.RegisterType((*RetJSONTrx)(nil), "RetJSONTrx")
	proto.RegisterType((*Trans1)(nil), "Trans1")
	proto.RegisterType((*NodeInfoReq)(nil), "NodeInfoReq")
	proto.RegisterType((*RetJSONNode)(nil), "RetJSONNode")
	proto.RegisterType((*NodeExt2)(nil), "NodeExt2")
	proto.RegisterType((*StakesInfo)(nil), "StakesInfo")
	proto.RegisterType((*BlocksStory)(nil), "BlocksStory")
	proto.RegisterType((*ResReward)(nil), "ResReward")
	proto.RegisterType((*BlocksListReq)(nil), "BlocksListReq")
	proto.RegisterType((*BlocksListResp)(nil), "BlocksListResp")
	proto.RegisterType((*TrxsListReq)(nil), "TrxsListReq")
	proto.RegisterType((*TrxsListResp)(nil), "TrxsListResp")
	proto.RegisterType((*NodesListResp)(nil), "NodesListResp")
	proto.RegisterType((*CoinsListResp)(nil), "CoinsListResp")
	proto.RegisterType((*CoinView)(nil), "CoinView")
	proto.RegisterType((*CoinReq)(nil), "CoinReq")
	proto.RegisterType((*CoinResp)(nil), "CoinResp")
	proto.RegisterType((*OneCoinTrans)(nil), "OneCoinTrans")
	proto.RegisterType((*CoinMarketCapData)(nil), "CoinMarketCapData")
	proto.RegisterType((*CoinActionpData)(nil), "CoinActionpData")
	proto.RegisterType((*WalletListReq)(nil), "WalletListReq")
	proto.RegisterType((*TasksListResp)(nil), "TasksListResp")
	proto.RegisterType((*WalletReq)(nil), "WalletReq")
	proto.RegisterType((*WalletResp)(nil), "WalletResp")
	proto.RegisterType((*WalletCoin1)(nil), "WalletCoin1")
	proto.RegisterType((*WalletRewardsResp)(nil), "WalletRewardsResp")
	proto.RegisterType((*WalletDelegateResp)(nil), "WalletDelegateResp")
	proto.RegisterType((*Delegate)(nil), "Delegate")
	proto.RegisterType((*SyncResp)(nil), "SyncResp")
	proto.RegisterType((*CoinBaseResp)(nil), "CoinBaseResp")
	proto.RegisterType((*ActionResp)(nil), "ActionResp")
	proto.RegisterType((*SendCoinReq)(nil), "SendCoinReq")
	proto.RegisterType((*DelegCoinReq)(nil), "DelegCoinReq")
	proto.RegisterType((*DeclareNodeReq)(nil), "DeclareNodeReq")
	proto.RegisterType((*StartStopNodeReq)(nil), "StartStopNodeReq")
	proto.RegisterType((*CreateCoinReq)(nil), "CreateCoinReq")
	proto.RegisterType((*CreateCheckReq)(nil), "CreateCheckReq")
	proto.RegisterType((*RedeemCheckReq)(nil), "RedeemCheckReq")
	proto.RegisterType((*NewNodeInfoReq)(nil), "NewNodeInfoReq")
	proto.RegisterType((*NewCoinInfoReq)(nil), "NewCoinInfoReq")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 3552 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x5a, 0x5b, 0x73, 0x1c, 0x47,
	0xf5, 0xdf, 0xfb, 0xe5, 0xec, 0x45, 0x76, 0x5b, 0x71, 0xf6, 0xbf, 0x7f, 0x93, 0x38, 0x1d, 0xdb,
	0xb8, 0x52, 0x61, 0x1c, 0xc9, 0x26, 0x40, 0x80, 0x2a, 0x56, 0x52, 0xe2, 0x08, 0x6c, 0x49, 0x6e,
	0xad, 0xed, 0x14, 0x05, 0x15, 0xc6, 0xbb, 0x2d, 0x69, 0x4a, 0xbb, 0x33, 0xcb, 0xcc, 0xc8, 0x5a,
	0xf1, 0x44, 0x05, 0x9e, 0x78, 0xa2, 0xa0, 0x80, 0x8f, 0xc0, 0x33, 0x2f, 0x7c, 0x00, 0x5e, 0x28,
	0xaa, 0xa8, 0xe2, 0x81, 0xe2, 0x13, 0x84, 0x0f, 0x42, 0x9d, 0xd3, 0x97, 0xe9, 0x59, 0xad, 0x64,
	0xe7, 0x69, 0xfb, 0x9c, 0x3e, 0x3d, 0x73, 0xfa, 0xf4, 0xb9, 0xfc, 0xfa, 0xcc, 0x42, 0xd3, 0x9f,
	0x05, 0xde, 0x2c, 0x8e, 0xd2, 0xa8, 0x7f, 0xe3, 0x30, 0x8a, 0x0e, 0x27, 0xf2, 0x9e, 0x3f, 0x0b,
	0xee, 0xf9, 0x61, 0x18, 0xa5, 0x7e, 0x1a, 0x44, 0x61, 0xa2, 0x67, 0xdf, 0xd6, 0xb3, 0x44, 0xbd,
	0x38, 0x39, 0xb8, 0x97, 0x06, 0x53, 0x99, 0xa4, 0xfe, 0x74, 0xa6, 0x04, 0x78, 0x1f, 0x6a, 0x3b,
	0xc1, 0x44, 0xc8, 0x9f, 0xb3, 0x2b, 0x50, 0xde, 0x09, 0x26, 0xbd, 0xe2, 0xcd, 0xe2, 0xdd, 0x86,
	0xc0, 0x21, 0xff, 0x7f, 0x68, 0xee, 0xcb, 0x24, 0x09, 0xa2, 0x70, 0x7b, 0x8b, 0x75, 0xa1, 0xb4,
	0xbd, 0x45, 0xb3, 0x4d, 0x51, 0xda, 0xde, 0xe2, 0x77, 0x01, 0xf6, 0xa5, 0x1c, 0xef, 0x1d, 0xc5,
	0x7e, 0x22, 0x59, 0x1f, 0x1a, 0x8f, 0x43, 0x39, 0x8d, 0xc2, 0x60, 0xa4, 0x65, 0x2c, 0xcd, 0xb7,
	0xa0, 0x3d, 0x48, 0xfd, 0xe4, 0x38, 0xd9, 0x3d, 0x49, 0xf1, 0x45, 0x37, 0xa0, 0x39, 0x8c, 0x8e,
	0x65, 0x38, 0x38, 0x49, 0x8f, 0xb4, 0x70, 0xc6, 0x60, 0xd7, 0xa1, 0xb6, 0x77, 0xf2, 0xe2, 0x47,
	0xf2, 0xac, 0x57, 0xa2, 0x29, 0x4d, 0xf1, 0xc7, 0xd0, 0x11, 0x32, 0x3d, 0x89, 0xc3, 0xc1, 0xde,
	0xf6, 0xd0, 0x4f, 0x8e, 0xd9, 0x5b, 0x00, 0xcf, 0xfd, 0xc9, 0x44, 0xa6, 0x9b, 0x7e, 0xa2, 0x9e,
	0x53, 0x12, 0x0e, 0x87, 0xdd, 0x80, 0xca, 0xa3, 0x20, 0x49, 0x7b, 0xa5, 0x9b, 0xe5, 0xbb, 0xad,
	0xf5, 0x86, 0x87, 0x8b, 0x76, 0x43, 0x29, 0x88, 0xcb, 0xff, 0x51, 0x84, 0xba, 0xe6, 0x30, 0x06,
	0x95, 0xad, 0x28, 0x94, 0x7a, 0xeb, 0x34, 0x66, 0x0f, 0xa0, 0xbe, 0x19, 0x4b, 0x3f, 0x95, 0x63,
	0xd2, 0xa3, 0xb5, 0xde, 0xf7, 0x94, 0x29, 0x3d, 0x63, 0x4a, 0x6f, 0x68, 0x4c, 0x29, 0x8c, 0x28,
	0x3e, 0x69, 0x78, 0x36, 0x93, 0xbd, 0x32, 0xa9, 0x4e, 0x63, 0xdc, 0xd0, 0xa7, 0x32, 0x38, 0x3c,
	0x4a, 0x7b, 0x95, 0x9b, 0xc5, 0xbb, 0x1d, 0xa1, 0x29, 0x67, 0xa3, 0x55, 0x77, 0xa3, 0xac, 0x07,
	0xf5, 0xc1, 0x78, 0x1c, 0xcb, 0x24, 0xe9, 0xd5, 0x68, 0xc2, 0x90, 0xb8, 0x62, 0x30, 0x8d, 0x4e,
	0xc2, 0xb4, 0x57, 0xa7, 0xdd, 0x6a, 0x8a, 0x7f, 0x1b, 0x2a, 0x42, 0x26, 0x4f, 0x70, 0x7e, 0x3f,
	0xf5, 0xd3, 0x93, 0x84, 0x76, 0x52, 0x15, 0x9a, 0xc2, 0x27, 0x3e, 0x96, 0x49, 0xe2, 0x1f, 0x4a,
	0x6d, 0x53, 0x43, 0xf2, 0x2d, 0x68, 0xee, 0x44, 0x63, 0x39, 0x8c, 0xc6, 0x11, 0x2d, 0x1f, 0xce,
	0x3f, 0x35, 0xc6, 0x6c, 0x0a, 0x4d, 0xb1, 0xb7, 0xa1, 0xfa, 0xc4, 0xb1, 0x64, 0xd3, 0x43, 0xf1,
	0xdd, 0x50, 0x3e, 0x11, 0x8a, 0xcf, 0xff, 0x5a, 0x84, 0x86, 0xe1, 0x59, 0x13, 0x14, 0x97, 0x9a,
	0xa0, 0x74, 0x81, 0x09, 0xca, 0x17, 0x99, 0xa0, 0x92, 0x37, 0x81, 0x73, 0x2c, 0xd5, 0xd7, 0x3f,
	0x96, 0xcc, 0x70, 0xb5, 0x9c, 0xe1, 0xee, 0x40, 0x7b, 0x63, 0x12, 0x8d, 0x8e, 0xb7, 0xc3, 0x83,
	0x08, 0x3d, 0xf3, 0x3a, 0xd4, 0x76, 0x4e, 0xa6, 0x2f, 0x64, 0x4c, 0xda, 0x77, 0x84, 0xa6, 0xf8,
	0x4f, 0xa1, 0x2d, 0x64, 0xfa, 0xc3, 0xfd, 0xdd, 0x1d, 0x12, 0x5f, 0x30, 0x74, 0xc3, 0x1a, 0xfa,
	0x6b, 0x50, 0x25, 0x01, 0xed, 0x32, 0x75, 0x8f, 0xa8, 0x35, 0x51, 0xb5, 0xcb, 0x3e, 0x8e, 0xe3,
	0xc7, 0xc9, 0xa1, 0xd9, 0xae, 0xa2, 0xf8, 0x97, 0x15, 0xa8, 0x29, 0x49, 0xb4, 0x9e, 0x73, 0x02,
	0x34, 0x46, 0x6b, 0xe0, 0xef, 0xe3, 0x20, 0x34, 0xc7, 0xa7, 0x49, 0xc7, 0xae, 0x65, 0x75, 0xe0,
	0xda, 0xae, 0x1e, 0x54, 0xd0, 0x0a, 0x64, 0xbc, 0xcb, 0x4d, 0x44, 0x72, 0x18, 0xfa, 0x83, 0x43,
	0xa9, 0xfd, 0x10, 0x87, 0xda, 0x12, 0xc3, 0xb9, 0xf2, 0xc1, 0xaa, 0xd0, 0x14, 0xc6, 0xf9, 0x30,
	0x4a, 0xfd, 0x09, 0xce, 0xd4, 0x69, 0xc6, 0xd2, 0xec, 0x43, 0x68, 0x0f, 0x63, 0x3f, 0x4c, 0xfc,
	0x11, 0x65, 0xa0, 0x5e, 0x83, 0xdc, 0x85, 0x69, 0x23, 0x38, 0x53, 0x22, 0x27, 0xc7, 0x6e, 0x43,
	0xed, 0xe3, 0x97, 0x32, 0x4c, 0x93, 0x5e, 0x93, 0x56, 0x74, 0xf4, 0x0a, 0xc5, 0x14, 0x7a, 0x92,
	0x7d, 0x00, 0xf0, 0xcc, 0x9f, 0x04, 0x63, 0x3f, 0x8d, 0xe2, 0xa4, 0x07, 0x24, 0x7a, 0x45, 0x8b,
	0xda, 0x09, 0xe1, 0xc8, 0xa0, 0xb2, 0x7b, 0x71, 0x34, 0x8b, 0x12, 0x19, 0xf7, 0x5a, 0x2a, 0x29,
	0x19, 0x9a, 0x71, 0x68, 0x9b, 0xf1, 0x8e, 0x3f, 0x95, 0xbd, 0x36, 0xcd, 0xe7, 0x78, 0xae, 0xcc,
	0xa3, 0xe8, 0x30, 0xea, 0x75, 0xf2, 0x32, 0xc8, 0x63, 0x37, 0xa1, 0x45, 0x2a, 0x08, 0x79, 0xea,
	0xc7, 0xe3, 0x5e, 0x97, 0xfc, 0xcb, 0x65, 0xe1, 0x91, 0xee, 0x07, 0xbf, 0x90, 0xbd, 0x15, 0x32,
	0x17, 0x8d, 0xd9, 0x7b, 0x70, 0xc5, 0x35, 0xc1, 0x60, 0x1a, 0xa6, 0xbd, 0x2b, 0x34, 0x7f, 0x8e,
	0x8f, 0x79, 0x4e, 0x59, 0x80, 0xa4, 0xae, 0x92, 0x94, 0xc3, 0x61, 0x77, 0xa0, 0xbb, 0x17, 0xcb,
	0x51, 0x34, 0x9d, 0x06, 0x5a, 0x86, 0x91, 0xcc, 0x02, 0x97, 0xff, 0xbd, 0x04, 0x57, 0xcf, 0x1d,
	0xc5, 0x57, 0x74, 0x38, 0x06, 0x95, 0x4f, 0xe2, 0x68, 0x6a, 0xf2, 0x1b, 0x8e, 0x51, 0x1a, 0x7f,
	0x51, 0x5a, 0x07, 0xab, 0x26, 0xd9, 0x2a, 0x54, 0x77, 0xa2, 0x70, 0xa4, 0x1c, 0xab, 0x2a, 0x14,
	0x81, 0xa7, 0xf2, 0xd0, 0x4f, 0xf6, 0xe2, 0x60, 0x24, 0xb5, 0x73, 0x59, 0xda, 0x26, 0x0f, 0xe5,
	0x5a, 0x2a, 0x79, 0xf4, 0xa0, 0x8e, 0xbf, 0xc3, 0x79, 0xda, 0x6b, 0xa8, 0xe7, 0x6b, 0xd2, 0x09,
	0xeb, 0xa6, 0x1b, 0xd6, 0xb8, 0x62, 0xcf, 0x3f, 0x9b, 0x44, 0xfe, 0xb8, 0x07, 0x6a, 0x85, 0x26,
	0xd1, 0xd1, 0x1f, 0xfa, 0x09, 0x39, 0x43, 0x55, 0xe0, 0x10, 0x65, 0x1f, 0xfa, 0xc9, 0x66, 0x14,
	0x84, 0xda, 0x05, 0x0c, 0xa9, 0x67, 0x9e, 0x26, 0x72, 0x4c, 0x07, 0x5f, 0x15, 0x86, 0xe4, 0xbf,
	0x2d, 0xe9, 0xbc, 0xa1, 0x5d, 0x74, 0x69, 0xce, 0x73, 0xd4, 0x2e, 0xe5, 0xd5, 0x66, 0x50, 0x11,
	0xd1, 0xc4, 0x16, 0x09, 0x1c, 0x5f, 0x92, 0xf1, 0xde, 0x02, 0xd0, 0x43, 0xb4, 0xb0, 0x0a, 0x51,
	0x87, 0x73, 0x51, 0x6e, 0xc3, 0xb7, 0xd0, 0xae, 0xea, 0xea, 0x2d, 0xb4, 0xa5, 0xbb, 0xb0, 0x62,
	0xc3, 0x43, 0x27, 0x5e, 0x65, 0xd2, 0x45, 0x36, 0xf3, 0x80, 0x2d, 0xb0, 0xf0, 0xed, 0x4d, 0x12,
	0x5e, 0x32, 0xc3, 0x03, 0x58, 0x59, 0x88, 0x44, 0x27, 0xb9, 0x17, 0x73, 0xc9, 0x1d, 0x93, 0x67,
	0x70, 0x18, 0xea, 0xc2, 0x8a, 0xc9, 0x93, 0x28, 0x54, 0x98, 0x22, 0x51, 0x9b, 0x85, 0x22, 0x90,
	0x41, 0x85, 0x22, 0x4f, 0xd9, 0x84, 0xc6, 0xfc, 0x16, 0xc0, 0x30, 0x9e, 0x2f, 0x4f, 0xd9, 0x4d,
	0x9b, 0xb2, 0x9f, 0x03, 0xe8, 0x94, 0x3d, 0x8c, 0xe7, 0x17, 0x26, 0xec, 0xff, 0x83, 0xf2, 0x30,
	0x9e, 0xdb, 0x74, 0x4d, 0x81, 0xb1, 0x26, 0xca, 0x7a, 0xc9, 0xd2, 0x64, 0xfd, 0xcf, 0x0a, 0xd4,
	0x94, 0xdc, 0xc2, 0x53, 0x9b, 0xf6, 0xa9, 0x26, 0xa6, 0x4a, 0xcb, 0x63, 0xaa, 0x7c, 0x51, 0x12,
	0xaf, 0xe4, 0x92, 0xf8, 0x2a, 0x54, 0xb7, 0xc3, 0xb1, 0x9c, 0x9b, 0xe8, 0x21, 0xc2, 0x46, 0x60,
	0x6d, 0x79, 0x04, 0xd6, 0x2f, 0x88, 0xc0, 0xc6, 0x45, 0x11, 0xd8, 0x5c, 0x88, 0x40, 0x27, 0x1e,
	0xe0, 0xc2, 0x78, 0x68, 0xe5, 0xe2, 0x01, 0x77, 0xf0, 0xd0, 0x4f, 0x3e, 0x91, 0x2a, 0x8b, 0x96,
	0x84, 0xa6, 0x6c, 0x58, 0x74, 0x96, 0x47, 0x73, 0x37, 0x1f, 0x16, 0x4e, 0xd4, 0xae, 0xe4, 0xa3,
	0x96, 0x5c, 0x79, 0x2c, 0x75, 0x86, 0xa4, 0x31, 0x46, 0xf2, 0xa3, 0xe8, 0x90, 0xd2, 0x61, 0x53,
	0xe0, 0xd0, 0x09, 0x04, 0x96, 0x0b, 0x84, 0x9b, 0xd0, 0x1a, 0xce, 0x71, 0x07, 0xc3, 0x68, 0xe3,
	0xe4, 0xac, 0x77, 0x8d, 0x56, 0xb8, 0x2c, 0xcc, 0xf3, 0x86, 0xdc, 0x97, 0x93, 0x49, 0x6f, 0x55,
	0xe5, 0x79, 0x97, 0xa7, 0xc0, 0x11, 0x59, 0xfe, 0x0d, 0x03, 0x8e, 0xc8, 0xf6, 0x58, 0x10, 0xe7,
	0x0a, 0x98, 0xf6, 0xae, 0xd3, 0x7b, 0x2d, 0xad, 0x9e, 0x8b, 0xab, 0xb5, 0x5e, 0x6f, 0xd2, 0x7c,
	0x8e, 0xc7, 0x6f, 0x43, 0x0b, 0x11, 0xd8, 0xab, 0xdc, 0xf9, 0x8b, 0x22, 0xb4, 0xb4, 0x3f, 0xa3,
	0xf8, 0x25, 0x08, 0xa4, 0x82, 0xf3, 0xda, 0xa3, 0x9b, 0x1e, 0x12, 0x1f, 0xcf, 0xd3, 0x75, 0x41,
	0x6c, 0x76, 0x0b, 0xea, 0xaa, 0x2a, 0x25, 0xbd, 0x32, 0x15, 0x50, 0xf0, 0x84, 0x4c, 0x14, 0x4b,
	0x98, 0x29, 0xc7, 0xf5, 0x2b, 0x39, 0xd7, 0xff, 0x4f, 0x0d, 0x1a, 0xe6, 0x81, 0xec, 0x16, 0x74,
	0x6c, 0xac, 0x53, 0xdc, 0x2a, 0x85, 0xf3, 0x4c, 0x34, 0x81, 0x65, 0x3c, 0x15, 0x8f, 0x74, 0x48,
	0xe4, 0x78, 0x58, 0x0c, 0x2d, 0x8d, 0x11, 0xbe, 0x3d, 0x35, 0x31, 0x77, 0x8e, 0x9f, 0x7b, 0xeb,
	0x96, 0x4c, 0x46, 0x5a, 0xc3, 0x3c, 0x13, 0x37, 0xf0, 0x74, 0x86, 0x37, 0x1d, 0x8a, 0x9d, 0x92,
	0xd0, 0x94, 0x8b, 0x1e, 0x6b, 0xaf, 0x8f, 0x1e, 0x6f, 0xe1, 0xcd, 0x03, 0x2d, 0x63, 0x32, 0xb4,
	0x0a, 0xb2, 0x3c, 0x13, 0x77, 0xba, 0x7b, 0x1a, 0xca, 0xd8, 0x08, 0xa9, 0xc4, 0x9a, 0xe3, 0x61,
	0x2e, 0x27, 0xb4, 0xb4, 0x9f, 0xfa, 0xc7, 0x52, 0x17, 0x2d, 0x87, 0xe3, 0xa4, 0x4c, 0xc8, 0xa5,
	0xcc, 0x1b, 0xd0, 0xcc, 0x92, 0xb0, 0x42, 0x32, 0x19, 0x23, 0x67, 0x3f, 0xf3, 0xf6, 0xf6, 0x82,
	0xfd, 0x1c, 0x0d, 0x36, 0x11, 0x13, 0xd0, 0xad, 0x4e, 0x07, 0xa6, 0xc3, 0x41, 0x30, 0xa1, 0xb7,
	0x3d, 0x48, 0x15, 0x94, 0xed, 0x2a, 0x30, 0x91, 0xe7, 0xa2, 0x46, 0xca, 0xe3, 0xb6, 0xc3, 0x54,
	0x23, 0x9b, 0x8c, 0xc1, 0x3e, 0x02, 0x40, 0x3b, 0x3e, 0x9d, 0x8d, 0xfd, 0x54, 0x85, 0xed, 0xe5,
	0xa6, 0x76, 0xa4, 0xd9, 0xbb, 0xe4, 0xd9, 0xc7, 0x32, 0xe9, 0x5d, 0x25, 0x0f, 0x6d, 0x79, 0x8a,
	0xa4, 0x08, 0xd1, 0x53, 0xec, 0x96, 0x06, 0xcc, 0x49, 0x8f, 0x91, 0x50, 0x5b, 0xe1, 0xc0, 0x64,
	0x3f, 0x8d, 0xe2, 0x33, 0xa1, 0xe7, 0xa8, 0x74, 0x4e, 0xc3, 0x54, 0x4b, 0x62, 0xe0, 0x57, 0x84,
	0xc3, 0xc1, 0xcc, 0x80, 0xd4, 0xfe, 0xc4, 0x4f, 0x8e, 0xe4, 0x98, 0xc2, 0xbe, 0x2a, 0x5c, 0x96,
	0x96, 0xd8, 0x89, 0xf4, 0x23, 0xde, 0xb0, 0x12, 0x86, 0x85, 0x86, 0x50, 0x0b, 0xa2, 0x34, 0xa1,
	0x04, 0x50, 0x15, 0x19, 0x03, 0x5d, 0x27, 0x33, 0xee, 0x4e, 0x74, 0x4a, 0x29, 0xa0, 0x2a, 0xf2,
	0x4c, 0x7e, 0x04, 0x90, 0xed, 0x11, 0x73, 0x36, 0x39, 0x8d, 0x0e, 0x28, 0x45, 0xd8, 0x72, 0x5e,
	0x72, 0xca, 0xf9, 0x2a, 0x54, 0x9f, 0xf9, 0x93, 0x13, 0x55, 0x32, 0x4b, 0x42, 0x11, 0x98, 0x91,
	0x36, 0x82, 0x99, 0x9a, 0xa8, 0xa8, 0x8c, 0x64, 0x68, 0xbe, 0xa6, 0xd1, 0xaa, 0x32, 0x94, 0x73,
	0xa7, 0xef, 0xe0, 0x9d, 0xde, 0x26, 0xec, 0x52, 0x86, 0x63, 0xb8, 0x84, 0xa6, 0x4d, 0x11, 0x16,
	0xba, 0x14, 0x97, 0x43, 0x97, 0xd2, 0xb9, 0xfb, 0xea, 0xd2, 0xeb, 0x1d, 0x83, 0x0a, 0xe1, 0x54,
	0xa5, 0x1d, 0x8d, 0xf9, 0xbb, 0xd0, 0x51, 0x9a, 0xe1, 0x8d, 0x12, 0x33, 0x21, 0x83, 0xca, 0x1e,
	0xde, 0x58, 0x95, 0x76, 0x34, 0xe6, 0x5f, 0x16, 0xa1, 0xeb, 0x4a, 0x25, 0x33, 0x76, 0x1b, 0x9a,
	0x83, 0xc9, 0x44, 0x9f, 0x4f, 0x91, 0x9c, 0xc1, 0x5e, 0xbb, 0xb2, 0x19, 0x1b, 0x79, 0xd9, 0xf5,
	0xac, 0x23, 0x1c, 0x0e, 0xf5, 0x2f, 0x82, 0x50, 0xcd, 0x96, 0x69, 0xd6, 0xd2, 0x34, 0xe7, 0xcf,
	0xd5, 0x5c, 0x45, 0xcf, 0x69, 0x1a, 0x8f, 0x60, 0x23, 0x0d, 0x1f, 0x3d, 0xa2, 0x44, 0xd3, 0x11,
	0x8a, 0x40, 0xdd, 0x71, 0x40, 0x49, 0xa6, 0x23, 0x68, 0xac, 0x79, 0x82, 0x92, 0x87, 0xe2, 0x09,
	0xbd, 0x5a, 0x08, 0x4a, 0x16, 0x6a, 0xb5, 0x10, 0xfc, 0x1d, 0x68, 0x0d, 0xe3, 0xf9, 0xa5, 0x86,
	0xf8, 0x73, 0x11, 0xef, 0x5a, 0xf3, 0xcc, 0x0c, 0xef, 0x40, 0x7d, 0x30, 0x99, 0x0c, 0xe3, 0x30,
	0x33, 0x82, 0x06, 0x33, 0x86, 0xff, 0x4a, 0x13, 0x5c, 0x87, 0xda, 0x46, 0x4a, 0x4e, 0xaa, 0x0c,
	0xa0, 0x29, 0xbb, 0x99, 0xca, 0x92, 0xcd, 0x54, 0x97, 0x6d, 0xa6, 0xe6, 0x6e, 0xe6, 0x07, 0xd0,
	0xc1, 0x92, 0x91, 0x69, 0x7a, 0x0f, 0x3a, 0x83, 0xc9, 0x64, 0xd3, 0x0f, 0xc7, 0x98, 0x99, 0xa4,
	0xd1, 0xd7, 0x29, 0x55, 0xf9, 0x79, 0xfe, 0x21, 0xc6, 0x50, 0x10, 0xba, 0x47, 0xde, 0x40, 0x09,
	0xe4, 0xd9, 0xc5, 0x48, 0x3d, 0x0b, 0xe4, 0xa9, 0xb0, 0x53, 0xfc, 0x97, 0x25, 0x68, 0x18, 0xb6,
	0xe3, 0xe9, 0x55, 0xe3, 0xe9, 0x54, 0xb4, 0x4a, 0x0e, 0xd8, 0xc4, 0x12, 0x1f, 0x8c, 0x8e, 0x65,
	0x6c, 0xdc, 0x55, 0x51, 0x98, 0x04, 0xf0, 0x39, 0xa6, 0x34, 0xa9, 0x8a, 0xe3, 0xb2, 0xd4, 0x45,
	0x33, 0x18, 0x49, 0xc4, 0x17, 0x55, 0x73, 0xd1, 0x54, 0x34, 0xae, 0x36, 0xe3, 0xa7, 0xfb, 0x5b,
	0x1a, 0xb7, 0xb9, 0x2c, 0x5c, 0xfd, 0x2c, 0x9a, 0x9c, 0x4c, 0xe5, 0xfa, 0x03, 0x5d, 0x5a, 0x2c,
	0x8d, 0x73, 0x9b, 0x47, 0x7e, 0x78, 0x88, 0x73, 0xaa, 0xa2, 0x58, 0x9a, 0xf4, 0xd2, 0xe3, 0x83,
	0xfb, 0xeb, 0xba, 0x9c, 0xb8, 0x2c, 0xfe, 0x7d, 0xa8, 0xa3, 0x9a, 0xe8, 0x45, 0x88, 0xbb, 0x68,
	0x3b, 0x6b, 0x3a, 0x78, 0x0d, 0x99, 0xcd, 0xac, 0xdb, 0x8b, 0x8a, 0x22, 0xf9, 0xdf, 0xaa, 0xca,
	0x82, 0x64, 0xf5, 0x8f, 0x00, 0x54, 0x86, 0xde, 0xf2, 0x53, 0x9f, 0x9e, 0xf1, 0x8a, 0x9c, 0x9e,
	0x49, 0xdb, 0x7e, 0x44, 0xe9, 0x35, 0xfb, 0x11, 0x37, 0xa0, 0x39, 0x0c, 0xd2, 0x89, 0xa4, 0x8c,
	0x57, 0xd6, 0x1d, 0x42, 0xc3, 0x60, 0x6b, 0x0b, 0x7d, 0x86, 0x8a, 0xee, 0x1a, 0xec, 0x86, 0x34,
	0x4f, 0x73, 0x0b, 0x2d, 0x06, 0x67, 0xf7, 0xd5, 0x0b, 0x77, 0x5f, 0xcb, 0xed, 0x1e, 0xcd, 0xbb,
	0x9b, 0x1e, 0xc9, 0x78, 0x5d, 0x79, 0x5a, 0xfd, 0x66, 0x19, 0x0f, 0xce, 0x61, 0xd9, 0xa3, 0xdd,
	0x89, 0x4e, 0xf1, 0xe4, 0x1b, 0xce, 0xd1, 0x2a, 0x96, 0xea, 0x20, 0x28, 0x92, 0x90, 0x65, 0xd3,
	0x74, 0x10, 0x32, 0x5e, 0xee, 0x88, 0x41, 0xe5, 0x6b, 0x7b, 0xc4, 0xae, 0x6b, 0xb4, 0xd4, 0x9c,
	0x75, 0x8d, 0xeb, 0x50, 0x7b, 0x7c, 0x66, 0x2f, 0xae, 0x0d, 0xa1, 0x29, 0xdc, 0x11, 0x15, 0xeb,
	0x28, 0xd6, 0x0d, 0x0b, 0x43, 0x52, 0xf1, 0x57, 0xc3, 0xe1, 0x67, 0x43, 0x0d, 0xbf, 0x1d, 0x0e,
	0x7b, 0x13, 0xea, 0x9b, 0x42, 0x7c, 0x3e, 0x8b, 0x47, 0xba, 0xa4, 0xd7, 0x36, 0x85, 0xd8, 0x8b,
	0x47, 0x58, 0xc6, 0xb6, 0xc3, 0x20, 0x0d, 0x7c, 0x83, 0x64, 0xaf, 0x28, 0x04, 0x94, 0x63, 0x22,
	0x76, 0xd0, 0x0c, 0x21, 0x13, 0x19, 0xbf, 0x94, 0x1a, 0x9d, 0x2f, 0x70, 0x51, 0x71, 0xb5, 0x09,
	0x03, 0xd4, 0x15, 0x85, 0xeb, 0xb5, 0xc8, 0x86, 0x3f, 0xf1, 0xf1, 0xd6, 0xa2, 0xb0, 0xfa, 0x02,
	0x97, 0xbd, 0xaf, 0xbc, 0x7a, 0x3b, 0x3c, 0xa0, 0x92, 0xdd, 0x5a, 0x67, 0x14, 0xfe, 0x8f, 0xfd,
	0xf8, 0x58, 0xa6, 0x9b, 0xfe, 0x0c, 0x5d, 0x4e, 0x18, 0x11, 0xfe, 0x9b, 0x22, 0xb4, 0x5d, 0xcf,
	0xa0, 0x6e, 0x2f, 0xc2, 0x12, 0x5d, 0xc3, 0x70, 0x8c, 0xbc, 0xdd, 0x99, 0x54, 0xd5, 0xb5, 0x24,
	0x68, 0x4c, 0xb7, 0xb8, 0xe0, 0xf0, 0x48, 0x17, 0x57, 0x1a, 0xab, 0x5b, 0xc7, 0xa9, 0x2e, 0x5c,
	0x38, 0xc4, 0xac, 0xb7, 0x39, 0x89, 0x12, 0x83, 0x34, 0x15, 0xe1, 0x6c, 0xb1, 0xe6, 0x6e, 0x91,
	0xff, 0xab, 0x02, 0x57, 0xcf, 0xe9, 0x6a, 0x93, 0x51, 0xd1, 0x49, 0x46, 0x04, 0xd4, 0x82, 0x70,
	0xff, 0x6c, 0xfa, 0x22, 0x9a, 0xe8, 0xc0, 0x74, 0x38, 0x74, 0xca, 0x51, 0x10, 0x22, 0xa6, 0xd6,
	0xf7, 0x49, 0x4d, 0xbe, 0x5e, 0xba, 0x42, 0x92, 0xf0, 0xb3, 0x4e, 0x57, 0x86, 0xb6, 0xa1, 0x5a,
	0x7b, 0xcd, 0x50, 0xcd, 0x43, 0xbd, 0xfa, 0x57, 0x82, 0x7a, 0xe7, 0xdc, 0xaa, 0x41, 0xc6, 0x7a,
	0xa5, 0x5b, 0xa9, 0x4c, 0xb7, 0xe8, 0x56, 0xeb, 0xb0, 0xba, 0x19, 0x85, 0x49, 0xea, 0x87, 0xa9,
	0x66, 0x09, 0x3f, 0x0d, 0x22, 0x8a, 0xa9, 0xaa, 0x58, 0x3a, 0x87, 0x89, 0x46, 0x9d, 0x0c, 0x96,
	0x3d, 0x15, 0x60, 0x19, 0x83, 0xbd, 0x0f, 0x57, 0xf3, 0xae, 0x87, 0x52, 0xea, 0x8a, 0x7b, 0x7e,
	0xe2, 0x92, 0xb8, 0xbb, 0x05, 0x1d, 0xc4, 0x38, 0xe4, 0x7e, 0xeb, 0x0f, 0xe6, 0xdf, 0xd2, 0x98,
	0x3a, 0xcf, 0x64, 0x0f, 0x16, 0xd2, 0xda, 0x8a, 0xee, 0x70, 0xe2, 0xd1, 0x0c, 0x88, 0xa7, 0x3c,
	0x3b, 0x27, 0xc5, 0xff, 0x54, 0x82, 0x95, 0x05, 0x89, 0xa5, 0x3d, 0xbd, 0xaf, 0x9a, 0x82, 0xdd,
	0x2f, 0x19, 0xe6, 0xee, 0x7e, 0x03, 0x9a, 0xd9, 0x3d, 0x5a, 0xf9, 0x55, 0xc6, 0x30, 0x1e, 0xab,
	0xef, 0xd0, 0xd5, 0xcc, 0x63, 0xf5, 0x0d, 0xfa, 0x2d, 0xea, 0xdf, 0x9e, 0x48, 0xb5, 0x5c, 0xc5,
	0x85, 0xc3, 0x41, 0xbf, 0xd5, 0x14, 0x3d, 0x40, 0x7d, 0xe2, 0x70, 0x59, 0x18, 0x6b, 0xaa, 0x69,
	0xa1, 0xfc, 0x44, 0x11, 0x4e, 0xac, 0x35, 0x73, 0xb1, 0xf6, 0x5d, 0xe8, 0xa8, 0xaf, 0x41, 0x06,
	0x48, 0x5d, 0x87, 0x9a, 0x62, 0x98, 0xbb, 0xb5, 0xa2, 0x2c, 0xc0, 0x2a, 0x39, 0x00, 0xeb, 0x57,
	0x45, 0xe8, 0x0c, 0xfd, 0xc4, 0x01, 0x9a, 0xe6, 0x73, 0x52, 0x71, 0xd9, 0xe7, 0x24, 0x07, 0x3c,
	0x95, 0x96, 0x82, 0xa7, 0xf2, 0x12, 0xf0, 0x54, 0x59, 0x06, 0x9e, 0xaa, 0x2e, 0x78, 0x7a, 0x17,
	0x9a, 0x4a, 0xc7, 0x4b, 0xd4, 0xe7, 0xa1, 0xf9, 0x0e, 0x46, 0x6a, 0x7a, 0xd0, 0xd2, 0xdf, 0xc0,
	0x1c, 0x7c, 0xd4, 0xf6, 0x32, 0xde, 0x9a, 0x70, 0x05, 0xd8, 0x07, 0x70, 0x8d, 0x30, 0x20, 0xfa,
	0xe2, 0x76, 0xb8, 0xe1, 0x27, 0xd2, 0x5e, 0x33, 0x3a, 0x62, 0xd9, 0x14, 0xff, 0x8e, 0xfb, 0x86,
	0x35, 0x07, 0x35, 0x15, 0x73, 0xa8, 0xc9, 0x80, 0xfc, 0x92, 0x03, 0xf2, 0x3f, 0x87, 0xab, 0x46,
	0x55, 0xea, 0x34, 0x90, 0xc6, 0x77, 0x09, 0xc1, 0xeb, 0xfe, 0x79, 0xf1, 0x5c, 0x57, 0x22, 0x9b,
	0xa4, 0x4e, 0x0e, 0x2a, 0xa4, 0x65, 0xd5, 0x93, 0x5d, 0x16, 0xf7, 0x81, 0xa9, 0x17, 0x6c, 0xc9,
	0x89, 0x3c, 0xf4, 0x53, 0xe9, 0x00, 0x46, 0x62, 0x59, 0xc0, 0x68, 0x05, 0xec, 0x14, 0x86, 0x29,
	0x3d, 0xcb, 0x4c, 0xe9, 0x17, 0xe4, 0x99, 0xfc, 0x77, 0x45, 0x68, 0x18, 0x82, 0xf2, 0x87, 0xb9,
	0x62, 0x9b, 0x4f, 0x99, 0x59, 0x07, 0xd4, 0x6d, 0x7e, 0x64, 0xcd, 0xf4, 0x1c, 0xcf, 0xde, 0xeb,
	0xca, 0xcb, 0xee, 0x75, 0x95, 0x85, 0x7b, 0x1d, 0x0d, 0x36, 0x82, 0x99, 0x2e, 0x36, 0x96, 0xe6,
	0x3f, 0x81, 0xc6, 0xfe, 0x59, 0x38, 0xa2, 0xdd, 0xf6, 0xa1, 0xf1, 0xc8, 0x4f, 0x52, 0xa4, 0xf5,
	0x9d, 0xc1, 0xd2, 0x94, 0xa3, 0x4e, 0xe2, 0x58, 0x86, 0xe6, 0x4b, 0x9c, 0x21, 0x35, 0x0a, 0x09,
	0xc2, 0x1d, 0x99, 0x6a, 0x5d, 0x2c, 0xcd, 0xef, 0x40, 0x1b, 0xf5, 0x42, 0x0f, 0xa0, 0x37, 0x5c,
	0x70, 0xe4, 0xfc, 0x19, 0x80, 0x4a, 0x43, 0x46, 0x6a, 0x69, 0x8b, 0x0a, 0x11, 0x57, 0x3c, 0x77,
	0x1a, 0xa4, 0x86, 0xbc, 0xb0, 0xe5, 0x7a, 0x0c, 0xad, 0x7d, 0x19, 0x8e, 0x1d, 0x28, 0x6b, 0x2e,
	0x9c, 0xc5, 0xfc, 0x85, 0x73, 0xd9, 0x25, 0xb9, 0x07, 0xf5, 0x4f, 0xa4, 0x8b, 0x24, 0x0d, 0xb9,
	0xdc, 0xcc, 0xfc, 0xd7, 0x45, 0x68, 0xd3, 0xf9, 0x9a, 0xd7, 0xdd, 0x80, 0xa6, 0xa5, 0xcd, 0x19,
	0x5b, 0x46, 0xde, 0x03, 0x4a, 0x8b, 0x1e, 0x60, 0x72, 0x9e, 0xf2, 0xbd, 0xb2, 0x93, 0xf3, 0x94,
	0xcb, 0x39, 0xca, 0x55, 0x72, 0xca, 0xf1, 0x3f, 0x16, 0xa1, 0xbb, 0x25, 0x47, 0x13, 0x3f, 0x96,
	0x78, 0x31, 0xd2, 0x8a, 0x5c, 0xe2, 0x6c, 0xb4, 0xf7, 0xe9, 0xd4, 0x64, 0x31, 0x1c, 0x93, 0xa9,
	0xfd, 0xb9, 0xbb, 0x77, 0x4d, 0x5a, 0xc5, 0xf6, 0x53, 0x3f, 0x56, 0x17, 0xf1, 0xb2, 0x70, 0x38,
	0xae, 0x62, 0xd5, 0xbc, 0x62, 0x3f, 0x83, 0x2b, 0x24, 0xb2, 0x9f, 0x46, 0xb3, 0xd7, 0xd3, 0x6c,
	0x15, 0xaa, 0xbb, 0xe1, 0xee, 0xc1, 0x81, 0xee, 0xf7, 0x2b, 0xe2, 0xe2, 0x73, 0xe1, 0x7f, 0x29,
	0x42, 0x47, 0xb5, 0x9b, 0xcc, 0x11, 0xf4, 0xa1, 0x81, 0xa0, 0xc8, 0x39, 0x01, 0x4b, 0xd3, 0xb5,
	0x96, 0xdc, 0xcf, 0x39, 0x79, 0x87, 0x83, 0x6b, 0x11, 0x28, 0x50, 0x2e, 0x2a, 0xd3, 0x3e, 0x2d,
	0x8d, 0x7a, 0xe3, 0x58, 0xc8, 0x24, 0x7e, 0xa9, 0x8d, 0x90, 0x31, 0x10, 0xec, 0x6d, 0xda, 0x8c,
	0x8c, 0x43, 0x57, 0xe7, 0x5a, 0x5e, 0xe7, 0x03, 0xd3, 0x37, 0xdb, 0x3c, 0x92, 0xa3, 0x63, 0x7d,
	0x6d, 0x77, 0xf4, 0x5d, 0x08, 0xec, 0x92, 0x1b, 0xd8, 0x58, 0xd6, 0x92, 0xd3, 0x78, 0xac, 0xed,
	0xa0, 0x88, 0xac, 0x75, 0x5f, 0xa1, 0xbe, 0x95, 0x22, 0xf8, 0xf7, 0x10, 0x23, 0x8f, 0xa5, 0x9c,
	0xda, 0xf7, 0x20, 0x00, 0xc5, 0xb1, 0x69, 0x17, 0x11, 0x91, 0x3d, 0xb3, 0xe4, 0x3c, 0x93, 0x87,
	0xd0, 0xdd, 0x91, 0xa7, 0x6e, 0xbf, 0x79, 0x15, 0xaa, 0x74, 0xb1, 0x32, 0xab, 0x89, 0xc0, 0x9d,
	0x3f, 0x7f, 0xfe, 0x5c, 0xaf, 0xc5, 0x21, 0xa6, 0x5e, 0x84, 0x87, 0x71, 0x30, 0xc3, 0xf8, 0xd6,
	0x9a, 0xba, 0x2c, 0xdc, 0xef, 0xf6, 0x28, 0x32, 0x7e, 0x4c, 0x63, 0xfe, 0x19, 0xbd, 0x4f, 0x23,
	0xf1, 0x48, 0xff, 0xc9, 0x04, 0x9f, 0x5c, 0xbc, 0xf0, 0xc9, 0xa5, 0x8b, 0x9f, 0x5c, 0xce, 0x9e,
	0xbc, 0xfe, 0x87, 0x16, 0xb4, 0xf6, 0x26, 0x7e, 0x7a, 0x10, 0xc5, 0xd3, 0xc1, 0xde, 0x36, 0x7b,
	0x0f, 0x3a, 0xfa, 0xaf, 0x2a, 0xea, 0x18, 0x58, 0xcb, 0xcb, 0xfe, 0x9d, 0xd2, 0x07, 0xcf, 0xfe,
	0x8f, 0x85, 0x17, 0xd8, 0x5d, 0x68, 0x1b, 0x59, 0xb2, 0x95, 0x33, 0xdb, 0x07, 0xcf, 0x16, 0x5c,
	0x5e, 0x60, 0x77, 0xec, 0x53, 0x31, 0x5c, 0x53, 0x99, 0x13, 0xad, 0x7b, 0xea, 0x8f, 0x33, 0xbc,
	0xc0, 0x6e, 0x43, 0x6b, 0x47, 0x9e, 0x9a, 0x3f, 0xbc, 0x30, 0x33, 0xd3, 0x77, 0x95, 0xe0, 0x05,
	0xac, 0xcd, 0x83, 0x93, 0x34, 0x22, 0xe4, 0x70, 0x92, 0xb2, 0x8e, 0xe7, 0xfe, 0x2d, 0xa6, 0xdf,
	0xf5, 0x72, 0xff, 0x6f, 0xe1, 0x05, 0xf6, 0x0e, 0x80, 0x91, 0xdf, 0x0e, 0x59, 0x15, 0x8b, 0xe2,
	0x93, 0x3e, 0x78, 0xf6, 0x1f, 0x1b, 0xbc, 0xc0, 0xde, 0x83, 0x06, 0x75, 0x6f, 0x76, 0x43, 0xc9,
	0xf4, 0x77, 0x73, 0x6d, 0xea, 0x7e, 0xc7, 0x73, 0xff, 0xb3, 0xc0, 0x0b, 0xec, 0x7d, 0xe8, 0x3a,
	0xd0, 0x11, 0x57, 0xb4, 0xbc, 0xec, 0x4b, 0x5a, 0xbf, 0xe5, 0x65, 0x1f, 0xcc, 0x78, 0x81, 0x7d,
	0x1d, 0xea, 0xf8, 0x22, 0x14, 0x6b, 0x7b, 0x8e, 0xcb, 0xf4, 0xdb, 0x9e, 0xf3, 0x21, 0x82, 0x17,
	0xd8, 0x36, 0x40, 0xd6, 0x93, 0x63, 0x5d, 0x2f, 0xd7, 0xc6, 0xeb, 0xaf, 0x78, 0xf9, 0x86, 0x1d,
	0xef, 0x7f, 0xf1, 0xef, 0xff, 0xfe, 0xbe, 0xb4, 0xca, 0xd8, 0xbd, 0x97, 0x6b, 0xf7, 0xb0, 0x88,
	0x9e, 0xfa, 0x67, 0xf7, 0x5e, 0xa8, 0x2e, 0xdd, 0x5a, 0xfe, 0xb3, 0x38, 0x3d, 0xb0, 0xed, 0x39,
	0xcd, 0xb0, 0x7e, 0xc7, 0x73, 0xdb, 0x5e, 0x74, 0x44, 0x4d, 0xdb, 0x5f, 0xca, 0x0c, 0xdf, 0xf5,
	0x72, 0x4d, 0x27, 0x25, 0x67, 0xbb, 0x48, 0xae, 0x5c, 0xae, 0xb5, 0xc4, 0x0b, 0xec, 0xa6, 0xba,
	0x57, 0xe1, 0xb6, 0x1b, 0x9e, 0xce, 0x3f, 0xfd, 0xa6, 0x67, 0xda, 0x20, 0xbc, 0xc0, 0xbe, 0x01,
	0x4d, 0x8b, 0x0c, 0x59, 0xd7, 0xcb, 0x61, 0xcc, 0x7e, 0xd7, 0xcb, 0xa1, 0x46, 0xf2, 0xb6, 0x1c,
	0xde, 0x72, 0x1c, 0xac, 0xdf, 0xf2, 0x32, 0xe0, 0xc6, 0x0b, 0x8c, 0x03, 0x60, 0x91, 0xd6, 0x65,
	0xd2, 0xea, 0xd8, 0xf4, 0x4c, 0x69, 0xe7, 0x05, 0x76, 0x4b, 0x5d, 0xdd, 0xb0, 0x14, 0x67, 0x12,
	0x1d, 0xcf, 0x2d, 0xcf, 0xbc, 0xc0, 0xd6, 0x0c, 0xf4, 0x35, 0x5f, 0x74, 0xdc, 0xb7, 0x32, 0xef,
	0x1c, 0x06, 0xe3, 0x05, 0x76, 0x1f, 0xba, 0x79, 0xe4, 0x94, 0x5b, 0x73, 0xcd, 0x3b, 0x0f, 0xab,
	0xc8, 0x14, 0x1a, 0x7a, 0xe2, 0xa1, 0x9c, 0xb3, 0xc5, 0xb9, 0xb3, 0xfa, 0xc0, 0xc0, 0xbf, 0xc1,
	0x28, 0x35, 0x05, 0x9d, 0xb5, 0x3d, 0xa7, 0xb6, 0xf7, 0x5b, 0x5e, 0x86, 0x20, 0x78, 0x81, 0xad,
	0x1b, 0x3c, 0x37, 0x18, 0xa5, 0x59, 0xcd, 0xed, 0x78, 0x6e, 0x81, 0x5e, 0x5c, 0xf3, 0x20, 0xb7,
	0x66, 0x34, 0x89, 0xe9, 0xcb, 0xd7, 0x8a, 0x97, 0xaf, 0xa6, 0x8b, 0xab, 0x3e, 0x74, 0x56, 0x51,
	0x81, 0xa2, 0x55, 0x57, 0xbd, 0xc5, 0x5a, 0x77, 0xfe, 0x6d, 0xd7, 0xec, 0xba, 0xac, 0x68, 0xb1,
	0xae, 0x97, 0xab, 0x60, 0x8b, 0xab, 0xbe, 0x79, 0x7e, 0xd5, 0x91, 0x1c, 0xb1, 0x15, 0x2f, 0x5f,
	0x44, 0xce, 0x2b, 0xb9, 0x6a, 0x97, 0x39, 0x65, 0x80, 0xad, 0x78, 0xf9, 0xa2, 0xb0, 0xb8, 0xee,
	0xbe, 0x63, 0x78, 0x13, 0xca, 0x6c, 0xc5, 0xcb, 0xd7, 0x82, 0xcb, 0x16, 0x99, 0x14, 0xae, 0x16,
	0x39, 0x09, 0x7d, 0x61, 0xd1, 0x46, 0xed, 0xc7, 0x95, 0xb1, 0x3c, 0x48, 0x5e, 0xd4, 0xe8, 0x62,
	0x79, 0xff, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3c, 0xbe, 0x90, 0x8d, 0xa9, 0x28, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PlatformAPIClient is the client API for PlatformAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlatformAPIClient interface {
	SessionCreate(ctx context.Context, in *SeedPhrase, opts ...grpc.CallOption) (*SessionID, error)
	SessionCheck(ctx context.Context, in *SessionID, opts ...grpc.CallOption) (*WalletReq, error)
	SessionDelete(ctx context.Context, in *SessionID, opts ...grpc.CallOption) (*NilReq, error)
	NewMnemonic(ctx context.Context, in *NilReq, opts ...grpc.CallOption) (*SeedPhrase, error)
	AutoTaskOut(ctx context.Context, in *AtasksOutReq, opts ...grpc.CallOption) (*ReturnAPITask, error)
	AutoTaskIn(ctx context.Context, in *ResQ, opts ...grpc.CallOption) (*NodeTodoQ, error)
	BlockOne(ctx context.Context, in *BlockInfoReq, opts ...grpc.CallOption) (*RetJSONBlock, error)
	TransactionOne(ctx context.Context, in *TrxInfoReq, opts ...grpc.CallOption) (*RetJSONTrx, error)
	NodeOne(ctx context.Context, in *NodeInfoReq, opts ...grpc.CallOption) (*RetJSONNode, error)
	// получить список блоков [замена эндпоинта /blocks и /blocks/:pgn]
	BlocksList(ctx context.Context, in *BlocksListReq, opts ...grpc.CallOption) (*BlocksListResp, error)
	TransactionsList(ctx context.Context, in *TrxsListReq, opts ...grpc.CallOption) (*TrxsListResp, error)
	NodesList(ctx context.Context, in *NilReq, opts ...grpc.CallOption) (*NodesListResp, error)
	CoinsList(ctx context.Context, in *NilReq, opts ...grpc.CallOption) (*CoinsListResp, error)
	CoinOne(ctx context.Context, in *CoinReq, opts ...grpc.CallOption) (*CoinResp, error)
	TasksList(ctx context.Context, in *WalletListReq, opts ...grpc.CallOption) (*TasksListResp, error)
	WalletCoins(ctx context.Context, in *WalletReq, opts ...grpc.CallOption) (*WalletResp, error)
	SyncStatus(ctx context.Context, in *NilReq, opts ...grpc.CallOption) (*SyncResp, error)
	CoinBase(ctx context.Context, in *NilReq, opts ...grpc.CallOption) (*CoinBaseResp, error)
	WalletRewards(ctx context.Context, in *WalletReq, opts ...grpc.CallOption) (*WalletRewardsResp, error)
	WalletDelegate(ctx context.Context, in *WalletReq, opts ...grpc.CallOption) (*WalletDelegateResp, error)
	WalletTrxs(ctx context.Context, in *WalletListReq, opts ...grpc.CallOption) (*TrxsListResp, error)
	WalletActSendCoin(ctx context.Context, in *SendCoinReq, opts ...grpc.CallOption) (*ActionResp, error)
	WalletActDelegCoin(ctx context.Context, in *DelegCoinReq, opts ...grpc.CallOption) (*ActionResp, error)
	WalletActDeclrNode(ctx context.Context, in *DeclareNodeReq, opts ...grpc.CallOption) (*ActionResp, error)
	WalletActOnOffNode(ctx context.Context, in *StartStopNodeReq, opts ...grpc.CallOption) (*ActionResp, error)
	WalletActCreateCoin(ctx context.Context, in *CreateCoinReq, opts ...grpc.CallOption) (*ActionResp, error)
	WalletActCreateChec(ctx context.Context, in *CreateCheckReq, opts ...grpc.CallOption) (*ActionResp, error)
	WalletActRedeemCheck(ctx context.Context, in *RedeemCheckReq, opts ...grpc.CallOption) (*ActionResp, error)
	WalletActNodeInfo(ctx context.Context, in *NewNodeInfoReq, opts ...grpc.CallOption) (*ActionResp, error)
	WalletActCoinInfo(ctx context.Context, in *NewCoinInfoReq, opts ...grpc.CallOption) (*ActionResp, error)
}

type platformAPIClient struct {
	cc *grpc.ClientConn
}

func NewPlatformAPIClient(cc *grpc.ClientConn) PlatformAPIClient {
	return &platformAPIClient{cc}
}

func (c *platformAPIClient) SessionCreate(ctx context.Context, in *SeedPhrase, opts ...grpc.CallOption) (*SessionID, error) {
	out := new(SessionID)
	err := c.cc.Invoke(ctx, "/PlatformAPI/SessionCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) SessionCheck(ctx context.Context, in *SessionID, opts ...grpc.CallOption) (*WalletReq, error) {
	out := new(WalletReq)
	err := c.cc.Invoke(ctx, "/PlatformAPI/SessionCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) SessionDelete(ctx context.Context, in *SessionID, opts ...grpc.CallOption) (*NilReq, error) {
	out := new(NilReq)
	err := c.cc.Invoke(ctx, "/PlatformAPI/SessionDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) NewMnemonic(ctx context.Context, in *NilReq, opts ...grpc.CallOption) (*SeedPhrase, error) {
	out := new(SeedPhrase)
	err := c.cc.Invoke(ctx, "/PlatformAPI/NewMnemonic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) AutoTaskOut(ctx context.Context, in *AtasksOutReq, opts ...grpc.CallOption) (*ReturnAPITask, error) {
	out := new(ReturnAPITask)
	err := c.cc.Invoke(ctx, "/PlatformAPI/AutoTaskOut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) AutoTaskIn(ctx context.Context, in *ResQ, opts ...grpc.CallOption) (*NodeTodoQ, error) {
	out := new(NodeTodoQ)
	err := c.cc.Invoke(ctx, "/PlatformAPI/AutoTaskIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) BlockOne(ctx context.Context, in *BlockInfoReq, opts ...grpc.CallOption) (*RetJSONBlock, error) {
	out := new(RetJSONBlock)
	err := c.cc.Invoke(ctx, "/PlatformAPI/BlockOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) TransactionOne(ctx context.Context, in *TrxInfoReq, opts ...grpc.CallOption) (*RetJSONTrx, error) {
	out := new(RetJSONTrx)
	err := c.cc.Invoke(ctx, "/PlatformAPI/TransactionOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) NodeOne(ctx context.Context, in *NodeInfoReq, opts ...grpc.CallOption) (*RetJSONNode, error) {
	out := new(RetJSONNode)
	err := c.cc.Invoke(ctx, "/PlatformAPI/NodeOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) BlocksList(ctx context.Context, in *BlocksListReq, opts ...grpc.CallOption) (*BlocksListResp, error) {
	out := new(BlocksListResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/BlocksList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) TransactionsList(ctx context.Context, in *TrxsListReq, opts ...grpc.CallOption) (*TrxsListResp, error) {
	out := new(TrxsListResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/TransactionsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) NodesList(ctx context.Context, in *NilReq, opts ...grpc.CallOption) (*NodesListResp, error) {
	out := new(NodesListResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/NodesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) CoinsList(ctx context.Context, in *NilReq, opts ...grpc.CallOption) (*CoinsListResp, error) {
	out := new(CoinsListResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/CoinsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) CoinOne(ctx context.Context, in *CoinReq, opts ...grpc.CallOption) (*CoinResp, error) {
	out := new(CoinResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/CoinOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) TasksList(ctx context.Context, in *WalletListReq, opts ...grpc.CallOption) (*TasksListResp, error) {
	out := new(TasksListResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/TasksList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletCoins(ctx context.Context, in *WalletReq, opts ...grpc.CallOption) (*WalletResp, error) {
	out := new(WalletResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletCoins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) SyncStatus(ctx context.Context, in *NilReq, opts ...grpc.CallOption) (*SyncResp, error) {
	out := new(SyncResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/SyncStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) CoinBase(ctx context.Context, in *NilReq, opts ...grpc.CallOption) (*CoinBaseResp, error) {
	out := new(CoinBaseResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/CoinBase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletRewards(ctx context.Context, in *WalletReq, opts ...grpc.CallOption) (*WalletRewardsResp, error) {
	out := new(WalletRewardsResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletRewards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletDelegate(ctx context.Context, in *WalletReq, opts ...grpc.CallOption) (*WalletDelegateResp, error) {
	out := new(WalletDelegateResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletDelegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletTrxs(ctx context.Context, in *WalletListReq, opts ...grpc.CallOption) (*TrxsListResp, error) {
	out := new(TrxsListResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletTrxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletActSendCoin(ctx context.Context, in *SendCoinReq, opts ...grpc.CallOption) (*ActionResp, error) {
	out := new(ActionResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletActSendCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletActDelegCoin(ctx context.Context, in *DelegCoinReq, opts ...grpc.CallOption) (*ActionResp, error) {
	out := new(ActionResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletActDelegCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletActDeclrNode(ctx context.Context, in *DeclareNodeReq, opts ...grpc.CallOption) (*ActionResp, error) {
	out := new(ActionResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletActDeclrNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletActOnOffNode(ctx context.Context, in *StartStopNodeReq, opts ...grpc.CallOption) (*ActionResp, error) {
	out := new(ActionResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletActOnOffNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletActCreateCoin(ctx context.Context, in *CreateCoinReq, opts ...grpc.CallOption) (*ActionResp, error) {
	out := new(ActionResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletActCreateCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletActCreateChec(ctx context.Context, in *CreateCheckReq, opts ...grpc.CallOption) (*ActionResp, error) {
	out := new(ActionResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletActCreateChec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletActRedeemCheck(ctx context.Context, in *RedeemCheckReq, opts ...grpc.CallOption) (*ActionResp, error) {
	out := new(ActionResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletActRedeemCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletActNodeInfo(ctx context.Context, in *NewNodeInfoReq, opts ...grpc.CallOption) (*ActionResp, error) {
	out := new(ActionResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletActNodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformAPIClient) WalletActCoinInfo(ctx context.Context, in *NewCoinInfoReq, opts ...grpc.CallOption) (*ActionResp, error) {
	out := new(ActionResp)
	err := c.cc.Invoke(ctx, "/PlatformAPI/WalletActCoinInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlatformAPIServer is the server API for PlatformAPI service.
type PlatformAPIServer interface {
	SessionCreate(context.Context, *SeedPhrase) (*SessionID, error)
	SessionCheck(context.Context, *SessionID) (*WalletReq, error)
	SessionDelete(context.Context, *SessionID) (*NilReq, error)
	NewMnemonic(context.Context, *NilReq) (*SeedPhrase, error)
	AutoTaskOut(context.Context, *AtasksOutReq) (*ReturnAPITask, error)
	AutoTaskIn(context.Context, *ResQ) (*NodeTodoQ, error)
	BlockOne(context.Context, *BlockInfoReq) (*RetJSONBlock, error)
	TransactionOne(context.Context, *TrxInfoReq) (*RetJSONTrx, error)
	NodeOne(context.Context, *NodeInfoReq) (*RetJSONNode, error)
	// получить список блоков [замена эндпоинта /blocks и /blocks/:pgn]
	BlocksList(context.Context, *BlocksListReq) (*BlocksListResp, error)
	TransactionsList(context.Context, *TrxsListReq) (*TrxsListResp, error)
	NodesList(context.Context, *NilReq) (*NodesListResp, error)
	CoinsList(context.Context, *NilReq) (*CoinsListResp, error)
	CoinOne(context.Context, *CoinReq) (*CoinResp, error)
	TasksList(context.Context, *WalletListReq) (*TasksListResp, error)
	WalletCoins(context.Context, *WalletReq) (*WalletResp, error)
	SyncStatus(context.Context, *NilReq) (*SyncResp, error)
	CoinBase(context.Context, *NilReq) (*CoinBaseResp, error)
	WalletRewards(context.Context, *WalletReq) (*WalletRewardsResp, error)
	WalletDelegate(context.Context, *WalletReq) (*WalletDelegateResp, error)
	WalletTrxs(context.Context, *WalletListReq) (*TrxsListResp, error)
	WalletActSendCoin(context.Context, *SendCoinReq) (*ActionResp, error)
	WalletActDelegCoin(context.Context, *DelegCoinReq) (*ActionResp, error)
	WalletActDeclrNode(context.Context, *DeclareNodeReq) (*ActionResp, error)
	WalletActOnOffNode(context.Context, *StartStopNodeReq) (*ActionResp, error)
	WalletActCreateCoin(context.Context, *CreateCoinReq) (*ActionResp, error)
	WalletActCreateChec(context.Context, *CreateCheckReq) (*ActionResp, error)
	WalletActRedeemCheck(context.Context, *RedeemCheckReq) (*ActionResp, error)
	WalletActNodeInfo(context.Context, *NewNodeInfoReq) (*ActionResp, error)
	WalletActCoinInfo(context.Context, *NewCoinInfoReq) (*ActionResp, error)
}

func RegisterPlatformAPIServer(s *grpc.Server, srv PlatformAPIServer) {
	s.RegisterService(&_PlatformAPI_serviceDesc, srv)
}

func _PlatformAPI_SessionCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SeedPhrase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).SessionCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/SessionCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).SessionCreate(ctx, req.(*SeedPhrase))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_SessionCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).SessionCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/SessionCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).SessionCheck(ctx, req.(*SessionID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_SessionDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).SessionDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/SessionDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).SessionDelete(ctx, req.(*SessionID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_NewMnemonic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NilReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).NewMnemonic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/NewMnemonic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).NewMnemonic(ctx, req.(*NilReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_AutoTaskOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AtasksOutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).AutoTaskOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/AutoTaskOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).AutoTaskOut(ctx, req.(*AtasksOutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_AutoTaskIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResQ)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).AutoTaskIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/AutoTaskIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).AutoTaskIn(ctx, req.(*ResQ))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_BlockOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).BlockOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/BlockOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).BlockOne(ctx, req.(*BlockInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_TransactionOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrxInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).TransactionOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/TransactionOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).TransactionOne(ctx, req.(*TrxInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_NodeOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).NodeOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/NodeOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).NodeOne(ctx, req.(*NodeInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_BlocksList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlocksListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).BlocksList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/BlocksList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).BlocksList(ctx, req.(*BlocksListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_TransactionsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrxsListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).TransactionsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/TransactionsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).TransactionsList(ctx, req.(*TrxsListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_NodesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NilReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).NodesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/NodesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).NodesList(ctx, req.(*NilReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_CoinsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NilReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).CoinsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/CoinsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).CoinsList(ctx, req.(*NilReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_CoinOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).CoinOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/CoinOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).CoinOne(ctx, req.(*CoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_TasksList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).TasksList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/TasksList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).TasksList(ctx, req.(*WalletListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletCoins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletCoins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletCoins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletCoins(ctx, req.(*WalletReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_SyncStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NilReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).SyncStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/SyncStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).SyncStatus(ctx, req.(*NilReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_CoinBase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NilReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).CoinBase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/CoinBase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).CoinBase(ctx, req.(*NilReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletRewards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletRewards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletRewards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletRewards(ctx, req.(*WalletReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletDelegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletDelegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletDelegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletDelegate(ctx, req.(*WalletReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletTrxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletTrxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletTrxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletTrxs(ctx, req.(*WalletListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletActSendCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletActSendCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletActSendCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletActSendCoin(ctx, req.(*SendCoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletActDelegCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelegCoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletActDelegCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletActDelegCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletActDelegCoin(ctx, req.(*DelegCoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletActDeclrNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeclareNodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletActDeclrNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletActDeclrNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletActDeclrNode(ctx, req.(*DeclareNodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletActOnOffNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartStopNodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletActOnOffNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletActOnOffNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletActOnOffNode(ctx, req.(*StartStopNodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletActCreateCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletActCreateCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletActCreateCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletActCreateCoin(ctx, req.(*CreateCoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletActCreateChec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCheckReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletActCreateChec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletActCreateChec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletActCreateChec(ctx, req.(*CreateCheckReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletActRedeemCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RedeemCheckReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletActRedeemCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletActRedeemCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletActRedeemCheck(ctx, req.(*RedeemCheckReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletActNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewNodeInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletActNodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletActNodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletActNodeInfo(ctx, req.(*NewNodeInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformAPI_WalletActCoinInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewCoinInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformAPIServer).WalletActCoinInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlatformAPI/WalletActCoinInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformAPIServer).WalletActCoinInfo(ctx, req.(*NewCoinInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlatformAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PlatformAPI",
	HandlerType: (*PlatformAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SessionCreate",
			Handler:    _PlatformAPI_SessionCreate_Handler,
		},
		{
			MethodName: "SessionCheck",
			Handler:    _PlatformAPI_SessionCheck_Handler,
		},
		{
			MethodName: "SessionDelete",
			Handler:    _PlatformAPI_SessionDelete_Handler,
		},
		{
			MethodName: "NewMnemonic",
			Handler:    _PlatformAPI_NewMnemonic_Handler,
		},
		{
			MethodName: "AutoTaskOut",
			Handler:    _PlatformAPI_AutoTaskOut_Handler,
		},
		{
			MethodName: "AutoTaskIn",
			Handler:    _PlatformAPI_AutoTaskIn_Handler,
		},
		{
			MethodName: "BlockOne",
			Handler:    _PlatformAPI_BlockOne_Handler,
		},
		{
			MethodName: "TransactionOne",
			Handler:    _PlatformAPI_TransactionOne_Handler,
		},
		{
			MethodName: "NodeOne",
			Handler:    _PlatformAPI_NodeOne_Handler,
		},
		{
			MethodName: "BlocksList",
			Handler:    _PlatformAPI_BlocksList_Handler,
		},
		{
			MethodName: "TransactionsList",
			Handler:    _PlatformAPI_TransactionsList_Handler,
		},
		{
			MethodName: "NodesList",
			Handler:    _PlatformAPI_NodesList_Handler,
		},
		{
			MethodName: "CoinsList",
			Handler:    _PlatformAPI_CoinsList_Handler,
		},
		{
			MethodName: "CoinOne",
			Handler:    _PlatformAPI_CoinOne_Handler,
		},
		{
			MethodName: "TasksList",
			Handler:    _PlatformAPI_TasksList_Handler,
		},
		{
			MethodName: "WalletCoins",
			Handler:    _PlatformAPI_WalletCoins_Handler,
		},
		{
			MethodName: "SyncStatus",
			Handler:    _PlatformAPI_SyncStatus_Handler,
		},
		{
			MethodName: "CoinBase",
			Handler:    _PlatformAPI_CoinBase_Handler,
		},
		{
			MethodName: "WalletRewards",
			Handler:    _PlatformAPI_WalletRewards_Handler,
		},
		{
			MethodName: "WalletDelegate",
			Handler:    _PlatformAPI_WalletDelegate_Handler,
		},
		{
			MethodName: "WalletTrxs",
			Handler:    _PlatformAPI_WalletTrxs_Handler,
		},
		{
			MethodName: "WalletActSendCoin",
			Handler:    _PlatformAPI_WalletActSendCoin_Handler,
		},
		{
			MethodName: "WalletActDelegCoin",
			Handler:    _PlatformAPI_WalletActDelegCoin_Handler,
		},
		{
			MethodName: "WalletActDeclrNode",
			Handler:    _PlatformAPI_WalletActDeclrNode_Handler,
		},
		{
			MethodName: "WalletActOnOffNode",
			Handler:    _PlatformAPI_WalletActOnOffNode_Handler,
		},
		{
			MethodName: "WalletActCreateCoin",
			Handler:    _PlatformAPI_WalletActCreateCoin_Handler,
		},
		{
			MethodName: "WalletActCreateChec",
			Handler:    _PlatformAPI_WalletActCreateChec_Handler,
		},
		{
			MethodName: "WalletActRedeemCheck",
			Handler:    _PlatformAPI_WalletActRedeemCheck_Handler,
		},
		{
			MethodName: "WalletActNodeInfo",
			Handler:    _PlatformAPI_WalletActNodeInfo_Handler,
		},
		{
			MethodName: "WalletActCoinInfo",
			Handler:    _PlatformAPI_WalletActCoinInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
